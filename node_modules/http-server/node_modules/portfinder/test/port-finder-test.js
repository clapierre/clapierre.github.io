function createServers(e){var r=8e3;async.whilst(function(){return 8005>r},function(e){var t=http.createServer(function(){});t.listen(r,e),r++,servers.push(t)},e)}var vows=require("vows"),assert=require("assert"),async=require("async"),http=require("http"),portfinder=require("../lib/portfinder"),servers=[];vows.describe("portfinder").addBatch({"When using portfinder module":{"with 5 existing servers":{topic:function(){createServers(this.callback)},"the getPort() method":{topic:function(){portfinder.getPort(this.callback)},"should respond with the first free port (8005)":function(e,r){assert.isTrue(!e),assert.equal(r,8005)}}}}}).addBatch({"When using portfinder module":{"with no existing servers":{topic:function(){return servers.forEach(function(e){e.close()}),null},"the getPort() method":{topic:function(){portfinder.getPort(this.callback)},"should respond with the first free port (8000)":function(e,r){assert.isTrue(!e),assert.equal(r,8e3)}}}}})["export"](module);