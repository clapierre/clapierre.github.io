function createServers(e){var t=8e3;async.whilst(function(){return 8005>t},function(e){var r=http.createServer(function(){});r.listen(t,e),t++,servers.push(r)},e)}var vows=require("vows"),assert=require("assert"),async=require("async"),http=require("http"),portfinder=require("../lib/portfinder"),servers=[];vows.describe("portfinder").addBatch({"When using portfinder module":{"with 5 existing servers":{topic:function(){createServers(this.callback)},"the getPorts() method with an argument of 3":{topic:function(){portfinder.getPorts(3,this.callback)},"should respond with the first three available ports (8005, 8006, 8007)":function(e,t){assert.isTrue(!e),assert.deepEqual(t,[8005,8006,8007])}}}}}).addBatch({"When using portfinder module":{"with no existing servers":{topic:function(){return servers.forEach(function(e){e.close()}),null},"the getPorts() method with an argument of 3":{topic:function(){portfinder.getPorts(3,this.callback)},"should respond with the first three available ports (8000, 8001, 80072":function(e,t){assert.isTrue(!e),assert.deepEqual(t,[8e3,8001,8002])}}}}})["export"](module);