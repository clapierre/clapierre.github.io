var assert=require("assert"),fs=require("fs"),path=require("path"),request=require("request"),vows=require("vows"),union=require("../lib/index"),macros=require("./helpers/macros"),doubleWrite=!1,server;server=union.createServer({before:[function(e,r){r.json(200,{hello:"world"}),r.emit("next")},function(e,r){doubleWrite=!0,r.json(200,{hello:"world"}),r.emit("next")}]}),vows.describe("union/double-write").addBatch({"When using union":{"an http server which attempts to write to the response twice":{topic:function(){server.listen(9091,this.callback)},"a GET request to `/foo`":{topic:function(){request({uri:"http://localhost:9091/foo"},this.callback)},"it should respond with `{ 'hello': 'world' }`":function(e,r,t){macros.assertValidResponse(e,r),assert.deepEqual(JSON.parse(t),{hello:"world"})},"it should not write to the response twice":function(){assert.isFalse(doubleWrite)}}}}}).addBatch({"When the tests are over":{"the server should close":function(){server.close()}}})["export"](module);