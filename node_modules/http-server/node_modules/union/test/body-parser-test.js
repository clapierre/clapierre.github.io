var assert=require("assert"),connect=require("connect"),request=require("request"),vows=require("vows"),union=require("../");vows.describe("union/body-parser").addBatch({"When using union with connect body parsing via urlencoded() or json()":{topic:function(){union.createServer({buffer:!1,before:[connect.urlencoded(),connect.json(),function(e,o){o.end(JSON.stringify(e.body,!0,2))}]}).listen(8082,this.callback)},"a request to /":{topic:function(){request.post({uri:"http://localhost:8082/",headers:{"content-type":"application/json"},body:JSON.stringify({a:"foo",b:"bar"})},this.callback)},"should respond with a body-decoded object":function(e,o,n){assert.isNull(e),assert.equal(o.statusCode,200),assert.deepEqual(JSON.parse(n),{a:"foo",b:"bar"})}}}})["export"](module);