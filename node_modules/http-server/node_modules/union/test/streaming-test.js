var assert=require("assert"),fs=require("fs"),path=require("path"),request=require("request"),vows=require("vows"),union=require("../");vows.describe("union/streaming").addBatch({"When using `union`":{"a simple union server":{topic:function(){var e=this;union.createServer({buffer:!1,before:[function(t){var r="";t.on("data",function(e){r+=e}),t.on("end",function(){e.callback(null,r)})}]}).listen(9e3,function(){request.post("http://localhost:9000").write("hello world")})},"should receive complete POST data":function(e){assert.equal(e,"hello world")}},"a simple pipe to a file":{topic:function(){var e=this;union.createServer({before:[function(e,t){var r=path.join(__dirname,"fixtures","pipe-write-test.txt"),o=fs.createWriteStream(r);e.pipe(o),o.on("close",function(){t.writeHead(200),fs.createReadStream(r).pipe(t)})}]}).listen(9044,function(){request({method:"POST",uri:"http://localhost:9044",body:"hello world"},e.callback)})},"should receive complete POST data":function(e,t,r){assert.equal(r,"hello world")}}}})["export"](module);