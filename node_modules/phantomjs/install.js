"use strict";var requestProgress=require("request-progress");var progress=require("progress");var AdmZip=require("adm-zip");var cp=require("child_process");var fs=require("fs-extra");var helper=require("./lib/phantomjs");var kew=require("kew");var npmconf=require("npmconf");var path=require("path");var request=require("request");var url=require("url");var util=require("util");var which=require("which");var cdnUrl=process.env.npm_config_phantomjs_cdnurl||process.env.PHANTOMJS_CDNURL||"https://bitbucket.org/ariya/phantomjs/downloads";var downloadUrl=cdnUrl+"/phantomjs-"+helper.version+"-";var originalPath=process.env.PATH;var validExit=false;process.on("exit",function(){if(!validExit){console.log("Install exited unexpectedly");exit(1)}});process.env.PATH=helper.cleanPath(originalPath);var libPath=path.join(__dirname,"lib");var pkgPath=path.join(libPath,"phantom");var phantomPath=null;var tmpPath=null;var whichDeferred=kew.defer();which("phantomjs",whichDeferred.makeNodeResolver());whichDeferred.promise.then(function(a){phantomPath=a;if(phantomPath.indexOf(path.join("npm","phantomjs"))!==-1){console.log("Looks like an `npm install -g` on windows; unable to check for already installed version.");throw new Error("Global install")}var c=fs.readFileSync(phantomPath,"utf8");if(/NPM_INSTALL_MARKER/.test(c)){console.log("Looks like an `npm install -g`; unable to check for already installed version.");throw new Error("Global install")}else{var b=kew.defer();cp.execFile(phantomPath,["--version"],b.makeNodeResolver());return b.promise}}).then(function(a){var b=a.trim();if(helper.version==b){writeLocationFile(phantomPath);console.log("PhantomJS is already installed at",phantomPath+".");exit(0)}else{console.log("PhantomJS detected, but wrong version",a.trim(),"@",phantomPath+".");throw new Error("Wrong version")}}).fail(function(a){var b=kew.defer();npmconf.load(b.makeNodeResolver());return b.promise}).then(function(a){tmpPath=findSuitableTempDirectory(a);if(process.platform==="linux"&&process.arch==="x64"){downloadUrl+="linux-x86_64.tar.bz2"}else{if(process.platform==="linux"){downloadUrl+="linux-i686.tar.bz2"}else{if(process.platform==="darwin"||process.platform==="openbsd"||process.platform==="freebsd"){downloadUrl+="macosx.zip"}else{if(process.platform==="win32"){downloadUrl+="windows.zip"}else{console.error("Unexpected platform or architecture:",process.platform,process.arch);exit(1)}}}}var c=downloadUrl.split("/").pop();var b=path.join(tmpPath,c);if(!fs.existsSync(b)){console.log("Downloading",downloadUrl);console.log("Saving to",b);return requestBinary(getRequestOptions(a),b)}else{console.log("Download already available at",b);return b}}).then(function(a){return extractDownload(a)}).then(function(a){return copyIntoPlace(a,pkgPath)}).then(function(){var a=process.platform==="win32"?path.join(pkgPath,"phantomjs.exe"):path.join(pkgPath,"bin","phantomjs");try{fs.chmodSync(a,"755")}catch(c){if(c.code=="ENOENT"){console.error("chmod failed: phantomjs was not successfully copied to",a);exit(1)}throw c}var b=path.relative(libPath,a);writeLocationFile(b);console.log("Done. Phantomjs binary available at",a);exit(0)}).fail(function(a){console.error("Phantom installation failed",a,a.stack);exit(1)});function writeLocationFile(a){console.log("Writing location.js file");if(process.platform==="win32"){a=a.replace(/\\/g,"\\\\")}fs.writeFileSync(path.join(libPath,"location.js"),'module.exports.location = "'+a+'"')}function exit(a){validExit=true;process.env.PATH=originalPath;process.exit(a||0)}function findSuitableTempDirectory(h){var c=Date.now();var a=[process.env.TMPDIR||process.env.TEMP||h.get("tmp"),"/tmp",path.join(process.cwd(),"tmp")];for(var d=0;d<a.length;d++){var g=path.join(a[d],"phantomjs");try{fs.mkdirsSync(g,"0777");fs.chmodSync(g,"0777");var b=path.join(g,c+".tmp");fs.writeFileSync(b,"test");fs.unlinkSync(b);return g}catch(f){console.log(g,"is not writable:",f.message)}}console.error("Can not find a writable tmp directory, please report issue on https://github.com/Obvious/phantomjs/issues/59 with as much information as possible.");exit(1)}function getRequestOptions(d){var a=d.get("strict-ssl");if(process.version=="v0.10.34"){console.log("Node v0.10.34 detected, turning off strict ssl due to https://github.com/joyent/node/issues/8894");a=false}var c={uri:downloadUrl,encoding:null,followRedirect:true,headers:{},strictSSL:a};var f=d.get("https-proxy")||d.get("http-proxy")||d.get("proxy");if(f){var e=url.parse(f);if(e.auth){e.auth=e.auth.replace(/:.*$/,":******")}console.log("Using proxy "+url.format(e));c.proxy=f;c.headers["User-Agent"]=d.get("user-agent")}var b=d.get("ca");if(b){console.log("Using npmconf ca");c.ca=b}return c}function requestBinary(a,c){var b=kew.defer();var e=0;var g=0;var f=c+"-download-"+Date.now();console.log("Receiving...");var d=null;requestProgress(request(a,function(j,i,h){console.log("");if(!j&&i.statusCode===200){fs.writeFileSync(f,h);console.log("Received "+Math.floor(h.length/1024)+"K total.");fs.renameSync(f,c);b.resolve(c)}else{if(i){console.error("Error requesting archive.\nStatus: "+i.statusCode+"\nRequest options: "+JSON.stringify(a,null,2)+"\nResponse headers: "+JSON.stringify(i.headers,null,2)+"\nMake sure your network and proxy settings are correct.\n\nIf you continue to have issues, please report this full log at https://github.com/Medium/phantomjs");exit(1)}else{if(j&&j.stack&&j.stack.indexOf("SELF_SIGNED_CERT_IN_CHAIN")!=-1){console.error("Error making request, SELF_SIGNED_CERT_IN_CHAIN. Please read https://github.com/Medium/phantomjs#i-am-behind-a-corporate-proxy-that-uses-self-signed-ssl-certificates-to-intercept-encrypted-traffic");exit(1)}else{if(j){console.error("Error making request.\n"+j.stack+"\n\nPlease report this full log at https://github.com/Medium/phantomjs");exit(1)}else{console.error("Something unexpected happened, please report this full log at https://github.com/Medium/phantomjs");exit(1)}}}}})).on("progress",function(h){if(!d){d=new progress("  [:bar] :percent :etas",{total:h.total,width:40})}d.curr=h.received;d.tick(0)});return b.promise}function extractDownload(c){var a=kew.defer();var f=c+"-extract-"+Date.now();var b={cwd:f};fs.mkdirsSync(f,"0777");fs.chmodSync(f,"0777");if(c.substr(-4)===".zip"){console.log("Extracting zip contents");try{var d=new AdmZip(c);d.extractAllTo(f,true);a.resolve(f)}catch(e){console.error("Error extracting zip");a.reject(e)}}else{console.log("Extracting tar contents (via spawned process)");cp.execFile("tar",["jxf",c],b,function(i,g,h){if(i){console.error("Error extracting archive");a.reject(i)}else{a.resolve(f)}})}return a.promise}function copyIntoPlace(a,b){console.log("Removing",b);return kew.nfcall(fs.remove,b).then(function(){var e=fs.readdirSync(a);for(var d=0;d<e.length;d++){var c=path.join(a,e[d]);if(fs.statSync(c).isDirectory()&&c.indexOf(helper.version)!=-1){console.log("Copying extracted folder",c,"->",b);return kew.nfcall(fs.move,c,b)}}console.log("Could not find extracted file",e);throw new Error("Could not find extracted file")})};