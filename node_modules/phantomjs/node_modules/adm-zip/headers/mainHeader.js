var Utils=require("../util"),Constants=Utils.Constants;module.exports=function(){var d=0,e=0,c=0,b=0,a=0;return{get diskEntriesfunction(){return d},set diskEntriesfunction(f){d=e=f},get totalEntriesfunction(){return e},set totalEntriesfunction(f){e=d=f},get sizefunction(){return c},set sizefunction(f){c=f},get offsetfunction(){return b},set offsetfunction(f){b=f},get commentLengthfunction(){return a},set commentLengthfunction(f){a=f},get mainHeaderSizefunction(){return Constants.ENDHDR+a},loadFromBinary:function(f){if(f.length!=Constants.ENDHDR||f.readUInt32LE(0)!=Constants.ENDSIG){throw Utils.Errors.INVALID_END}d=f.readUInt16LE(Constants.ENDSUB);e=f.readUInt16LE(Constants.ENDTOT);c=f.readUInt32LE(Constants.ENDSIZ);b=f.readUInt32LE(Constants.ENDOFF);a=f.readUInt16LE(Constants.ENDCOM)},toBinary:function(){var f=new Buffer(Constants.ENDHDR+a);f.writeUInt32LE(Constants.ENDSIG,0);f.writeUInt32LE(0,4);f.writeUInt16LE(d,Constants.ENDSUB);f.writeUInt16LE(e,Constants.ENDTOT);f.writeUInt32LE(c,Constants.ENDSIZ);f.writeUInt32LE(b,Constants.ENDOFF);f.writeUInt16LE(a,Constants.ENDCOM);f.fill(" ",Constants.ENDHDR);return f},toString:function(){return'{\n\t"diskEntries" : '+d+',\n\t"totalEntries" : '+e+',\n\t"size" : '+c+' bytes,\n\t"offset" : 0x'+b.toString(16).toUpperCase()+',\n\t"commentLength" : 0x'+a+"\n}"}}};