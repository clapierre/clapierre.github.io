var Q=require("../kew");var originalQ=require("q");exports.testQResolve=function(b){var a="ok";Q.resolve(a).then(function(c){b.equal(c,a,"Promise successfully returned");b.done()})};exports.testQReject=function(b){var a=new Error("hello");Q.reject(a).fail(function(c){b.equal(c,a,"Promise successfully failed");b.done()})};exports.testQEmptySuccess=function(b){var a=[];Q.all(a).then(function(c){b.equal(c.length,0,"No records should be returned");b.done()})};exports.testQAllLiteralsSuccess=function(c){var b=[3,2,1];var a=[];a.push(b[0]);a.push(b[1]);a.push(b[2]);Q.all(a).then(function(d){c.equal(d[0],b[0],"First val should be returned");c.equal(d[1],b[1],"Second val should be returned");c.equal(d[2],b[2],"Third val should be returned");c.done()})};exports.testQAllPromisesSuccess=function(c){var b=[3,2,1];var a=[];a.push(Q.resolve(b[0]));a.push(Q.resolve(b[1]));a.push(Q.resolve(b[2]));Q.all(a).then(function(d){c.equal(d[0],b[0],"First val should be returned");c.equal(d[1],b[1],"Second val should be returned");c.equal(d[2],b[2],"Third val should be returned");c.done()})};exports.testQAllAssortedSuccess=function(d){var b=[3,2,1];var a=[];a.push(Q.resolve(b[0]));a.push(b[1]);var c=Q.defer();a.push(c.promise);setTimeout(function(){c.resolve(b[2])},10);Q.all(a).then(function(e){d.equal(e[0],b[0],"First val should be returned");d.equal(e[1],b[1],"Second val should be returned");d.equal(e[2],b[2],"Third val should be returned");d.done()})};exports.testQAllError=function(e){var c=[3,2,1];var b=new Error("hello");var a=[];a.push(c[0]);a.push(c[1]);var d=Q.defer();a.push(d.promise);d.reject(b);Q.all(a).fail(function(f){e.equal(f,b);e.done()})};exports.testAllVarArgs=function(b){var a=["a","b"];Q.all.apply(Q,a).then(function(c){b.equal(a[0],c[0],"First element should be returned");b.equal(a[1],c[1],"Second element should be returned");b.done()})};exports.testAllArray=function(b){var a=["a","b"];Q.all(a).then(function(c){b.equal(a[0],c[0],"First element should be returned");b.equal(a[1],c[1],"Second element should be returned");b.done()})};exports.testAllIsPromiseLike=function(b){var a=["a",originalQ("b")];Q.all(a).then(function(c){b.equal(a[0],"a","First element should be returned");b.equal(a[1],"b","Second element should be returned");b.done()})};exports.testDelay=function(c){var b="Hello, there";var a=Date.now();Q.resolve(b).then(function(d){return Q.delay(d,1000)}).then(function(d){c.equal(d,b,"Val should be passed through");c.equal(Date.now()-a>=1000,true,"Should have waited a second");c.done()})};exports.testFcall=function(c){var b=false;var a=function(e,d){b=true;return e+d};Q.fcall(a,2,3).then(function(d){c.equal(d,5,"Val should be 2 + 3");c.done()});c.ok(!b,"fcall() should delay function invocation until next tick")};exports.testFcallError=function(b){var a=function(){throw new Error("my error")};Q.fcall(a).then(function(c){b.fail("fcall should throw exception")},function(c){b.equal("my error",c.message)}).then(function(){b.done()})};exports.testFcallGivenPromise=function(c){var b=false;var a=function(e,d){b=true;return Q.resolve(e+d)};Q.fcall(a,2,3).then(function(d){c.equal(d,5,"Val should be 2 + 3");c.done()});c.ok(!b,"fcall() should delay function invocation until next tick")};exports.testNfcall=function(b){var a=function(d,c,e){setTimeout(function(){e(undefined,d+c)},2)};Q.nfcall(a,2,3).then(function(c){b.equal(c,5,"Val should be 2 + 3");b.done()})};exports.testNfcallErrors=function(c){var b=new Error("fail");var a=function(e,d,f){setTimeout(function(){f(b)},2)};Q.nfcall(a,2,3).fail(function(d){c.equal(d,b,"Promise successfully failed");c.done()})};exports.testNFcallErrorSync=function(b){var a=function(){throw new Error("my error")};Q.nfcall(a).then(function(c){b.fail("nfcall should throw exception")},function(c){b.equal("my error",c.message)}).then(function(){b.done()})};exports.testBindPromise=function(c){var a=function(e,d,f){f(null,e+d)};var b=Q.bindPromise(a,null,2);b(3).then(function(d){c.equal(d,5,"Val should be 2 + 3");c.done()})};exports.testIsPromise=function(d){var a=Q.defer();var c=originalQ(10);var b={promise:function(){return"not a promise sucka!"},then:function(e){e("like a promise, brah!")}};d.equal(Q.isPromise(a),true,"A Kew promise is a promise");d.equal(Q.isPromise(c),false,"A Q promise is not a promise");d.equal(Q.isPromise(b),false,"A pretend promise is not a promise");d.done()};exports.testIsPromiseLike=function(d){var a=Q.defer();var c=originalQ(10);var b={promise:function(){return"not a promise sucka!"},then:function(e){e("like a promise, brah!")}};d.equal(Q.isPromiseLike(a),true,"A Kew promise is promise-like");d.equal(Q.isPromiseLike(c),true,"A Q promise is promise-like");d.equal(Q.isPromiseLike(b),true,"A pretend promise is a promise-like");d.done()};