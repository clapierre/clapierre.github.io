function Progress(o,s){Base.call(this,o);{var e=this,s=s||{},r=(this.stats,.5*Base.window.width|0),t=o.total,c=0;Math.max}s.open=s.open||"[",s.complete=s.complete||"â–¬",s.incomplete=s.incomplete||Base.symbols.dot,s.close=s.close||"]",s.verbose=!1,o.on("start",function(){console.log(),cursor.hide()}),o.on("test end",function(){c++;var o=c/t,e=r*o|0,p=r-e;cursor.CR(),process.stdout.write("[J"),process.stdout.write(color("progress","  "+s.open)),process.stdout.write(Array(e).join(s.complete)),process.stdout.write(Array(p).join(s.incomplete)),process.stdout.write(color("progress",s.close)),s.verbose&&process.stdout.write(color("progress"," "+c+" of "+t))}),o.on("end",function(){cursor.show(),console.log(),e.epilogue()})}var Base=require("./base"),cursor=Base.cursor,color=Base.color;exports=module.exports=Progress,Base.colors.progress=90,Progress.prototype.__proto__=Base.prototype;