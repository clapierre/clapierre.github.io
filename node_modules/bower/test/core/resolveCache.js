var path=require("path");var mout=require("mout");var rimraf=require("rimraf");var fs=require("graceful-fs");var Q=require("q");var expect=require("expect.js");var mkdirp=require("mkdirp");var ResolveCache=require("../../lib/core/ResolveCache");var defaultConfig=require("../../lib/config");var cmd=require("../../lib/util/cmd");var copy=require("../../lib/util/copy");var md5=require("../../lib/util/md5");describe("ResolveCache",function(){var a;var b=path.resolve(__dirname,"../assets/package-a");var e=path.resolve(__dirname,"../tmp/temp-package");var c=path.resolve(__dirname,"../tmp/temp2-package");var d=path.join(__dirname,"../tmp/temp-resolve-cache");before(function(f){rimraf.sync(d);a=new ResolveCache(defaultConfig({storage:{packages:d}}));cmd("git",["checkout","0.2.0"],{cwd:b}).then(f.bind(f,null),f)});beforeEach(function(){a.reset()});after(function(){rimraf.sync(d)});describe(".constructor",function(){beforeEach(function(){rimraf.sync(e)});after(function(){rimraf.sync(e)});function f(g){return new ResolveCache(defaultConfig({storage:{packages:g}}))}it("should create the cache folder if it doesn't exists",function(){f(e);expect(fs.existsSync(e)).to.be(true)});it("should not error out if the cache folder already exists",function(){mkdirp.sync(e);f(e)})});describe(".store",function(){var f=fs.rename;beforeEach(function(g){fs.rename=f;rimraf.sync(e);copy.copyDir(b,e,{ignore:[".git"]}).then(g.bind(g,null),g)});it("should move the canonical dir to source-md5/version/ folder if package meta has a version",function(g){a.store(e,{name:"foo",version:"1.0.0",_source:"foo",_target:"*"}).then(function(h){expect(h).to.equal(path.join(d,md5("foo"),"1.0.0"));expect(fs.existsSync(h)).to.be(true);expect(fs.existsSync(path.join(h,"baz"))).to.be(true);expect(fs.existsSync(e)).to.be(false);g()}).done()});it("should move the canonical dir to source-md5/target/ folder if package meta has no version",function(g){a.store(e,{name:"foo",_source:"foo",_target:"some-branch"}).then(function(h){expect(h).to.equal(path.join(d,md5("foo"),"some-branch"));expect(fs.existsSync(h)).to.be(true);expect(fs.existsSync(path.join(h,"baz"))).to.be(true);expect(fs.existsSync(e)).to.be(false);g()}).done()});it("should move the canonical dir to source-md5/_wildcard/ folder if package meta has no version and target is *",function(g){a.store(e,{name:"foo",_source:"foo",_target:"*"}).then(function(h){expect(h).to.equal(path.join(d,md5("foo"),"_wildcard"));expect(fs.existsSync(h)).to.be(true);expect(fs.existsSync(path.join(h,"baz"))).to.be(true);expect(fs.existsSync(e)).to.be(false);g()}).done()});it("should read the package meta if not present",function(g){var h=path.join(e,".bower.json");copy.copyFile(path.join(e,"component.json"),h).then(function(){return Q.nfcall(fs.readFile,h).then(function(j){var i=JSON.parse(j.toString());i._target="~0.2.0";i._source="git://github.com/bower/test-package.git";return Q.nfcall(fs.writeFile,h,JSON.stringify(i,null,"  "))})}).then(function(){return a.store(e)}).then(function(i){expect(i).to.equal(path.join(d,md5("git://github.com/bower/test-package.git"),"0.2.0"));expect(fs.existsSync(i)).to.be(true);expect(fs.existsSync(path.join(i,"baz"))).to.be(true);expect(fs.existsSync(e)).to.be(false);g()}).done()});it("should error out when reading the package meta if the file does not exist",function(g){a.store(e).then(function(){g(new Error("Should have failed"))},function(h){expect(h).to.be.an(Error);expect(h.code).to.equal("ENOENT");expect(h.message).to.contain(path.join(e,".bower.json"));g()}).done()});it("should error out when reading an invalid package meta",function(g){var h=path.join(e,".bower.json");return Q.nfcall(fs.writeFile,h,"w00t").then(function(){return a.store(e).then(function(){g(new Error("Should have failed"))},function(i){expect(i).to.be.an(Error);expect(i.code).to.equal("EMALFORMED");expect(i.message).to.contain(path.join(e,".bower.json"));g()})}).done()});it("should move the canonical dir, even if it is in a different drive",function(h){var g=false;fs.rename=function(k,j,i){g=true;setTimeout(function(){var l=new Error();l.code="EXDEV";i(l)},10)};a.store(e,{name:"foo",_source:"foobar",_target:"some-branch"}).then(function(i){expect(g).to.be(true);expect(i).to.equal(path.join(d,md5("foobar"),"some-branch"));expect(fs.existsSync(i)).to.be(true);expect(fs.existsSync(path.join(i,"baz"))).to.be(true);expect(fs.existsSync(e)).to.be(false);h()}).done()});it("should update the in-memory cache",function(g){a.versions("test-in-memory").then(function(){return copy.copyDir(e,c,{ignore:[".git"]})}).then(function(){return a.store(e,{name:"foo",version:"1.0.0",_source:"test-in-memory",_target:"*"})}).then(function(){return a.store(c,{name:"foo",version:"1.0.1",_source:"test-in-memory",_target:"*"})}).then(function(){return a.versions("test-in-memory").then(function(h){expect(h).to.eql(["1.0.1","1.0.0"]);g()})}).done()});it("should url encode target when storing to the fs",function(g){a.store(e,{name:"foo",_source:"foo",_target:"foo/bar"}).then(function(h){expect(h).to.equal(path.join(d,md5("foo"),"foo%2Fbar"));expect(fs.existsSync(h)).to.be(true);expect(fs.existsSync(path.join(h,"baz"))).to.be(true);expect(fs.existsSync(e)).to.be(false);g()}).done()});it("should be possible to store two package at same time",function(i){var h=a.store.bind(a,e,{name:"foo",_source:"foo",_target:"foo/bar"});var g=a.store.bind(a,c,{name:"foo",_source:"foo",_target:"foo/bar"});Q.all([h(),g()]).then(function(k){var j=k[0];expect(j).to.equal(path.join(d,md5("foo"),"foo%2Fbar"));expect(fs.existsSync(j)).to.be(true);expect(fs.existsSync(path.join(j,"baz"))).to.be(true);expect(fs.existsSync(e)).to.be(false);expect(fs.existsSync(c)).to.be(false);i()}).done()})});describe(".versions",function(){it("should resolve to an array",function(f){a.versions(String(Math.random())).then(function(g){expect(g).to.be.an("array");f()}).done()});it("should ignore non-semver folders of the source",function(g){var i=String(Math.random());var h=md5(i);var f=path.join(d,h);fs.mkdirSync(f);fs.mkdirSync(path.join(f,"0.0.1"));fs.mkdirSync(path.join(f,"0.1.0"));fs.mkdirSync(path.join(f,"foo"));a.versions(i).then(function(j){expect(j).to.not.contain("foo");expect(j).to.contain("0.0.1");expect(j).to.contain("0.1.0");g()}).done()});it("should order the versions",function(g){var i=String(Math.random());var h=md5(i);var f=path.join(d,h);fs.mkdirSync(f);fs.mkdirSync(path.join(f,"0.0.1"));fs.mkdirSync(path.join(f,"0.1.0"));fs.mkdirSync(path.join(f,"0.1.0-rc.1"));a.versions(i).then(function(j){expect(j).to.eql(["0.1.0","0.1.0-rc.1","0.0.1"]);g()}).done()});it("should cache versions to speed-up subsequent calls",function(g){var i=String(Math.random());var h=md5(i);var f=path.join(d,h);fs.mkdirSync(f);fs.mkdirSync(path.join(f,"0.0.1"));a.versions(i).then(function(){rimraf.sync(f);return a.versions(i)}).then(function(j){expect(j).to.eql(["0.0.1"]);g()}).done()})});describe(".retrieve",function(){it("should resolve to empty if there are no packages for the requested source",function(f){a.retrieve(String(Math.random())).spread(function(){expect(arguments.length).to.equal(0);f()}).done()});it("should resolve to empty if there are no suitable packages for the requested target",function(g){var i=String(Math.random());var h=md5(i);var f=path.join(d,h);fs.mkdirSync(f);fs.mkdirSync(path.join(f,"0.0.1"));fs.mkdirSync(path.join(f,"0.1.0"));fs.mkdirSync(path.join(f,"0.1.9"));fs.mkdirSync(path.join(f,"0.2.0"));a.retrieve(i,"~0.3.0").spread(function(){expect(arguments.length).to.equal(0);return a.retrieve(i,"some-branch")}).spread(function(){expect(arguments.length).to.equal(0);g()}).done()});it("should remove invalid packages from the cache if their package meta is missing or invalid",function(g){var i=String(Math.random());var h=md5(i);var f=path.join(d,h);fs.mkdirSync(f);fs.mkdirSync(path.join(f,"0.0.1"));fs.mkdirSync(path.join(f,"0.1.0"));fs.mkdirSync(path.join(f,"0.1.9"));fs.mkdirSync(path.join(f,"0.2.0"));fs.writeFileSync(path.join(f,"0.2.0",".bower.json"),"w00t");a.retrieve(i,"~0.1.0").spread(function(){var j=fs.readdirSync(f);expect(arguments.length).to.equal(0);expect(j).to.contain("0.0.1");expect(j).to.contain("0.2.0");g()}).done()});it("should resolve to the highest package that matches a range target, ignoring pre-releases",function(h){var j=String(Math.random());var i=md5(j);var g=path.join(d,i);var f={name:"foo"};fs.mkdirSync(g);f.version="0.0.1";fs.mkdirSync(path.join(g,"0.0.1"));fs.writeFileSync(path.join(g,"0.0.1",".bower.json"),JSON.stringify(f,null,"  "));f.version="0.1.0";fs.mkdirSync(path.join(g,"0.1.0"));fs.writeFileSync(path.join(g,"0.1.0",".bower.json"),JSON.stringify(f,null,"  "));f.version="0.1.0-rc.1";fs.mkdirSync(path.join(g,"0.1.0-rc.1"));fs.writeFileSync(path.join(g,"0.1.0-rc.1",".bower.json"),JSON.stringify(f,null,"  "));f.version="0.1.9";fs.mkdirSync(path.join(g,"0.1.9"));fs.writeFileSync(path.join(g,"0.1.9",".bower.json"),JSON.stringify(f,null,"  "));f.version="0.2.0";fs.mkdirSync(path.join(g,"0.2.0"));fs.writeFileSync(path.join(g,"0.2.0",".bower.json"),JSON.stringify(f,null,"  "));a.retrieve(j,"~0.1.0").spread(function(k,l){expect(l).to.be.an("object");expect(l.version).to.equal("0.1.9");expect(k).to.equal(path.join(g,"0.1.9"));return a.retrieve(j,"*")}).spread(function(k,l){expect(l).to.be.an("object");expect(l.version).to.equal("0.2.0");expect(k).to.equal(path.join(g,"0.2.0"));h()}).done()});it("should resolve to the highest package that matches a range target, not ignoring pre-releases if they are the only versions",function(h){var j=String(Math.random());var i=md5(j);var g=path.join(d,i);var f={name:"foo"};fs.mkdirSync(g);f.version="0.1.0-rc.1";fs.mkdirSync(path.join(g,"0.1.0-rc.1"));fs.writeFileSync(path.join(g,"0.1.0-rc.1",".bower.json"),JSON.stringify(f,null,"  "));f.version="0.1.0-rc.2";fs.mkdirSync(path.join(g,"0.1.0-rc.2"));fs.writeFileSync(path.join(g,"0.1.0-rc.2",".bower.json"),JSON.stringify(f,null,"  "));a.retrieve(j,"~0.1.0").spread(function(k,l){expect(l).to.be.an("object");expect(l.version).to.equal("0.1.0-rc.2");expect(k).to.equal(path.join(g,"0.1.0-rc.2"));h()}).done()});it("should resolve to exact match (including build metadata) if available",function(h){var j=String(Math.random());var i=md5(j);var g=path.join(d,i);var f={name:"foo"};var k;fs.mkdirSync(g);f.version="0.1.0";fs.mkdirSync(path.join(g,"0.1.0"));fs.writeFileSync(path.join(g,"0.1.0",".bower.json"),JSON.stringify(f,null,"  "));f.version="0.1.0+build.4";k=encodeURIComponent("0.1.0+build.4");fs.mkdirSync(path.join(g,k));fs.writeFileSync(path.join(g,k,".bower.json"),JSON.stringify(f,null,"  "));f.version="0.1.0+build.5";k=encodeURIComponent("0.1.0+build.5");fs.mkdirSync(path.join(g,k));fs.writeFileSync(path.join(g,k,".bower.json"),JSON.stringify(f,null,"  "));f.version="0.1.0+build.6";k=encodeURIComponent("0.1.0+build.6");fs.mkdirSync(path.join(g,k));fs.writeFileSync(path.join(g,k,".bower.json"),JSON.stringify(f,null,"  "));a.retrieve(j,"0.1.0+build.5").spread(function(l,m){expect(m).to.be.an("object");expect(m.version).to.equal("0.1.0+build.5");expect(l).to.equal(path.join(g,encodeURIComponent("0.1.0+build.5")));h()}).done()});it("should resolve to the _wildcard package if target is * and there are no semver versions",function(h){var j=String(Math.random());var i=md5(j);var g=path.join(d,i);var f={name:"foo"};fs.mkdirSync(g);fs.mkdirSync(path.join(g,"_wildcard"));fs.writeFileSync(path.join(g,"_wildcard",".bower.json"),JSON.stringify(f,null,"  "));a.retrieve(j,"*").spread(function(k,l){expect(l).to.be.an("object");expect(k).to.equal(path.join(g,"_wildcard"));h()}).done()});it("should resolve to the exact target it's not a semver range",function(h){var j=String(Math.random());var i=md5(j);var g=path.join(d,i);var f={name:"foo"};fs.mkdirSync(g);fs.mkdirSync(path.join(g,"some-branch"));fs.writeFileSync(path.join(g,"some-branch",".bower.json"),JSON.stringify(f,null,"  "));fs.mkdirSync(path.join(g,"other-branch"));fs.writeFileSync(path.join(g,"other-branch",".bower.json"),JSON.stringify(f,null,"  "));a.retrieve(j,"some-branch").spread(function(k,l){expect(l).to.be.an("object");expect(l).to.not.have.property("version");h()}).done()})});describe(".eliminate",function(){beforeEach(function(){mkdirp.sync(d)});it("should delete the source-md5/version folder",function(g){var i=String(Math.random());var h=md5(i);var f=path.join(d,h);fs.mkdirSync(f);fs.mkdirSync(path.join(f,"0.0.1"));fs.mkdirSync(path.join(f,"0.1.0"));a.eliminate({name:"foo",version:"0.0.1",_source:i,_target:"*"}).then(function(){expect(fs.existsSync(path.join(f,"0.0.1"))).to.be(false);expect(fs.existsSync(path.join(f,"0.1.0"))).to.be(true);g()}).done()});it("should delete the source-md5/target folder",function(g){var i=String(Math.random());var h=md5(i);var f=path.join(d,h);fs.mkdirSync(f);fs.mkdirSync(path.join(f,"0.0.1"));fs.mkdirSync(path.join(f,"some-branch"));a.eliminate({name:"foo",_source:i,_target:"some-branch"}).then(function(){expect(fs.existsSync(path.join(f,"some-branch"))).to.be(false);expect(fs.existsSync(path.join(f,"0.0.1"))).to.be(true);g()}).done()});it("should delete the source-md5/_wildcard folder",function(g){var i=String(Math.random());var h=md5(i);var f=path.join(d,h);fs.mkdirSync(f);fs.mkdirSync(path.join(f,"0.0.1"));fs.mkdirSync(path.join(f,"_wildcard"));a.eliminate({name:"foo",_source:i,_target:"*"}).then(function(){expect(fs.existsSync(path.join(f,"_wildcard"))).to.be(false);expect(fs.existsSync(path.join(f,"0.0.1"))).to.be(true);g()}).done()});it("should delete the source-md5 folder if empty",function(g){var i=String(Math.random());var h=md5(i);var f=path.join(d,h);fs.mkdirSync(f);fs.mkdirSync(path.join(f,"0.0.1"));a.eliminate({name:"foo",version:"0.0.1",_source:i,_target:"*"}).then(function(){expect(fs.existsSync(path.join(f,"0.0.1"))).to.be(false);expect(fs.existsSync(path.join(f))).to.be(false);g()}).done()});it("should remove entry from in memory cache if the source-md5 folder was deleted",function(g){var i=String(Math.random());var h=md5(i);var f=path.join(d,h);fs.mkdirSync(f);fs.mkdirSync(path.join(f,"0.0.1"));a.versions(i).then(function(){return a.eliminate({name:"foo",version:"0.0.1",_source:i,_target:"*"})}).then(function(){mkdirp.sync(path.join(f,"0.0.2"));a.versions(i).then(function(j){expect(j).to.eql(["0.0.2"]);g()})}).done()})});describe(".clear",function(){beforeEach(function(){mkdirp.sync(d)});it("should empty the whole cache folder",function(f){a.clear().then(function(){var g;expect(fs.existsSync(d)).to.be(true);g=fs.readdirSync(d);expect(g.length).to.be(0);f()}).done()});it("should erase the in-memory cache",function(g){var i=String(Math.random());var h=md5(i);var f=path.join(d,h);fs.mkdirSync(f);fs.mkdirSync(path.join(f,"0.0.1"));a.versions(i).then(function(){return a.clear()}).then(function(){mkdirp.sync(path.join(f,"0.0.2"));a.versions(i).then(function(j){expect(j).to.eql(["0.0.2"]);g()})}).done()})});describe(".reset",function(){it("should erase the in-memory cache",function(g){var i=String(Math.random());var h=md5(i);var f=path.join(d,h);fs.mkdirSync(f);fs.mkdirSync(path.join(f,"0.0.1"));a.versions(i).then(function(){fs.rmdirSync(path.join(f,"0.0.1"));fs.mkdirSync(path.join(f,"0.0.2"));a.reset();return a.versions(i)}).then(function(j){expect(j).to.eql(["0.0.2"]);g()}).done()})});describe(".list",function(){beforeEach(function(){rimraf.sync(d);mkdirp.sync(d)});it("should resolve to an empty array if the cache is empty",function(f){a.list().then(function(g){expect(g).to.be.an("array");expect(g.length).to.be(0);f()}).done()});it("should resolve to an ordered array of entries (name ASC, release ASC)",function(j){var m="list-package-1";var l=md5(m);var h=path.join(d,l);var f="list-package-2";var i=md5(f);var k=path.join(d,i);var g={name:"foo"};fs.mkdirSync(h);fs.mkdirSync(path.join(h,"0.0.1"));g.version="0.0.1";fs.writeFileSync(path.join(h,"0.0.1",".bower.json"),JSON.stringify(g,null,"  "));fs.mkdirSync(path.join(h,"0.1.0"));g.version="0.1.0";fs.writeFileSync(path.join(h,"0.1.0",".bower.json"),JSON.stringify(g,null,"  "));delete g.version;fs.mkdirSync(path.join(h,"foo"));g._target="foo";fs.writeFileSync(path.join(h,"foo",".bower.json"),JSON.stringify(g,null,"  "));fs.mkdirSync(path.join(h,"bar"));g._target="bar";fs.writeFileSync(path.join(h,"bar",".bower.json"),JSON.stringify(g,null,"  "));fs.mkdirSync(path.join(h,"aa"));g._target="aa";fs.writeFileSync(path.join(h,"aa",".bower.json"),JSON.stringify(g,null,"  "));delete g._target;fs.mkdirSync(k);fs.mkdirSync(path.join(k,"0.2.1"));g.version="0.2.1";fs.writeFileSync(path.join(k,"0.2.1",".bower.json"),JSON.stringify(g,null,"  "));fs.mkdirSync(path.join(k,"0.2.0"));g.name="abc";g.version="0.2.0";fs.writeFileSync(path.join(k,"0.2.0",".bower.json"),JSON.stringify(g,null,"  "));a.list().then(function(n){var o;var p=path.join(__dirname,"../..");expect(n).to.be.an("array");o=fs.readFileSync(path.join(__dirname,"../assets/resolve-cache/list-json-1.json"));o=o.toString().trim();mout.object.forOwn(n,function(q){q.canonicalDir=q.canonicalDir.substr(p.length);q.canonicalDir=q.canonicalDir.replace(/\\/g,"/")});g=JSON.stringify(n,null,"  ");expect(g).to.equal(o);j()}).done()});it("should ignore lurking files where dirs are expected",function(h){var j="list-package-1";var i=md5(j);var g=path.join(d,i);var f={name:"foo"};fs.mkdirSync(g);fs.mkdirSync(path.join(g,"0.0.1"));f.version="0.0.1";fs.writeFileSync(path.join(g,"0.0.1",".bower.json"),JSON.stringify(f,null,"  "));fs.writeFileSync(path.join(d,"foo"),"w00t");fs.writeFileSync(path.join(d,".DS_Store"),"");fs.writeFileSync(path.join(g,"foo"),"w00t");fs.writeFileSync(path.join(g,".DS_Store"),"");a.list().then(function(k){expect(k).to.be.an("array");expect(k.length).to.be(1);expect(k[0].pkgMeta).to.eql(f);expect(fs.existsSync(path.join(d,"foo"))).to.be(false);expect(fs.existsSync(path.join(d,".DS_Store"))).to.be(false);expect(fs.existsSync(path.join(g,"foo"))).to.be(false);expect(fs.existsSync(path.join(g,".DS_Store"))).to.be(false);h()}).done()});it("should delete entries if failed to read package meta",function(h){var j="list-package-1";var i=md5(j);var g=path.join(d,i);var f={name:"foo"};fs.mkdirSync(g);fs.mkdirSync(path.join(g,"0.0.1"));fs.mkdirSync(path.join(g,"0.0.2"));fs.writeFileSync(path.join(g,"0.0.2",".bower.json"),"w00t");fs.mkdirSync(path.join(g,"0.0.3"));f.version="0.0.3";fs.writeFileSync(path.join(g,"0.0.3",".bower.json"),JSON.stringify(f,null,"  "));a.list().then(function(k){expect(k).to.be.an("array");expect(k.length).to.be(1);expect(k[0].pkgMeta).to.eql(f);expect(fs.existsSync(path.join(g,"0.0.1"))).to.be(false);expect(fs.existsSync(path.join(g,"0.0.2"))).to.be(false);h()}).done()})});describe("#clearRuntimeCache",function(){it("should clear the in-memory cache for all sources",function(i){var l=String(Math.random());var k=md5(l);var g=path.join(d,k);var f=String(Math.random());var h=md5(f);var j=path.join(d,h);fs.mkdirSync(g);fs.mkdirSync(path.join(g,"0.0.1"));fs.mkdirSync(j);fs.mkdirSync(path.join(j,"0.0.2"));a.versions(l).then(function(){return a.versions(f)}).then(function(){fs.mkdirSync(path.join(g,"0.0.3"));fs.mkdirSync(path.join(j,"0.0.4"));ResolveCache.clearRuntimeCache()}).then(function(){return a.versions(l).then(function(m){expect(m).to.eql(["0.0.3","0.0.1"]);return a.versions(f)}).then(function(m){expect(m).to.eql(["0.0.4","0.0.2"]);i()})}).done()})})});