var expect=require("expect.js");var path=require("path");var fs=require("graceful-fs");var Logger=require("bower-logger");var GitRemoteResolver=require("../../../lib/core/resolvers/GitRemoteResolver");var defaultConfig=require("../../../lib/config");describe("GitRemoteResolver",function(){var d=path.resolve(__dirname,"../../assets/package-a");var b;before(function(){b=new Logger()});afterEach(function(){b.removeAllListeners()});function a(){GitRemoteResolver.clearRuntimeCache()}function c(e){if(typeof e==="string"){e={source:e}}return new GitRemoteResolver(e,defaultConfig(),b)}describe(".constructor",function(){it("should guess the name from the path",function(){var e;e=c("file://"+d);expect(e.getName()).to.equal("package-a");e=c("git://github.com/twitter/bower.git");expect(e.getName()).to.equal("bower");e=c("git://github.com/twitter/bower");expect(e.getName()).to.equal("bower");e=c("git://github.com");expect(e.getName()).to.equal("github.com")})});describe(".resolve",function(){it("should checkout correctly if resolution is a branch",function(e){var f=c({source:"file://"+d,target:"some-branch"});f.resolve().then(function(g){expect(g).to.be.a("string");var h=fs.readdirSync(g);var i;expect(h).to.contain("foo");expect(h).to.contain("baz");expect(h).to.contain("baz");i=fs.readFileSync(path.join(g,"foo")).toString();expect(i).to.equal("foo foo");e()}).done()});it("should checkout correctly if resolution is a tag",function(e){var f=c({source:"file://"+d,target:"~0.0.1"});f.resolve().then(function(g){expect(g).to.be.a("string");var h=fs.readdirSync(g);expect(h).to.contain("foo");expect(h).to.contain("bar");expect(h).to.not.contain("baz");e()}).done()});it("should checkout correctly if resolution is a commit",function(e){var f=c({source:"file://"+d,target:"bdf51ece75e20cf404e49286727b7e92d33e9ad0"});f.resolve().then(function(g){expect(g).to.be.a("string");var h=fs.readdirSync(g);expect(h).to.not.contain("foo");expect(h).to.not.contain("bar");expect(h).to.not.contain("baz");expect(h).to.contain(".master");e()}).done()});it.skip("should handle gracefully servers that do not support --depth=1");it.skip("should report progress when it takes too long to clone")});describe("#refs",function(){afterEach(a);it("should resolve to the references of the remote repository",function(e){GitRemoteResolver.refs("file://"+d).then(function(f){f=f.slice(1,8);expect(f).to.eql(["e4655d250f2a3f64ef2d712f25dafa60652bb93e refs/heads/some-branch","0a7daf646d4fd743b6ef701d63bdbe20eee422de refs/tags/0.0.1","0791865e6f4b88f69fc35167a09a6f0626627765 refs/tags/0.0.2","2af02ac6ddeaac1c2f4bead8d6287ce54269c039 refs/tags/0.1.0","6ab264f1ba5bafa80fb0198183493e4d5b20804a refs/tags/0.1.1","c91ed7facbb695510e3e1ab86bac8b5ac159f4f3 refs/tags/0.2.0","8556e55c65722a351ca5fdce4f1ebe83ec3f2365 refs/tags/0.2.1"]);e()}).done()});it("should cache the results",function(e){var f="file://"+d;GitRemoteResolver.refs(f).then(function(){GitRemoteResolver._cache.refs.get(f).splice(0,1);return GitRemoteResolver.refs("file://"+d)}).then(function(g){g=g.slice(0,7);expect(g).to.eql(["e4655d250f2a3f64ef2d712f25dafa60652bb93e refs/heads/some-branch","0a7daf646d4fd743b6ef701d63bdbe20eee422de refs/tags/0.0.1","0791865e6f4b88f69fc35167a09a6f0626627765 refs/tags/0.0.2","2af02ac6ddeaac1c2f4bead8d6287ce54269c039 refs/tags/0.1.0","6ab264f1ba5bafa80fb0198183493e4d5b20804a refs/tags/0.1.1","c91ed7facbb695510e3e1ab86bac8b5ac159f4f3 refs/tags/0.2.0","8556e55c65722a351ca5fdce4f1ebe83ec3f2365 refs/tags/0.2.1"]);e()}).done()})})});