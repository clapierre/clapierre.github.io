var fs=require("graceful-fs");var path=require("path");var Q=require("q");var semver=require("semver");var mout=require("mout");var rimraf=require("rimraf");var mkdirp=require("mkdirp");var chalk=require("chalk");var cmd=require("../lib/util/cmd");var packages=require("./packages-svn.json");var nopt=require("nopt");var options=nopt({force:Boolean},{f:"--force"});var env={};mout.object.mixIn(env,process.env);function ensurePackage(a,b){var c;if(options.force){c=Q.nfcall(rimraf,b).then(function(){throw new Error()})}else{c=Q.nfcall(fs.stat,path.join(b,".svn"))}return c.fail(function(){return Q.nfcall(mkdirp,b).then(cmd.bind(null,"svnadmin",["create",a])).then(cmd.bind(null,"svn",["checkout","file://"+a,b])).then(cmd.bind(null,"svn",["mkdir","trunk"],{cwd:b})).then(cmd.bind(null,"svn",["mkdir","tags"],{cwd:b})).then(cmd.bind(null,"svn",["mkdir","branches"],{cwd:b})).then(function(){return cmd("svn",["commit",'-m"Initial commit."'],{cwd:b,env:env})}).then(function(){return b})})}function checkRelease(b,a){if(semver.valid(a)){return cmd("svn",["list","tags"],{cwd:b}).spread(function(c){return c.split(/\/\s*\r*\n\s*/).some(function(d){return semver.clean(d)===a})})}return cmd("svn",["list","branches"],{cwd:b}).spread(function(c){return c.split(/\/\s*\r*\n\s*/).some(function(d){d=d.trim().replace(/^\*?\s*/,"");return d===a})})}function createRelease(b,c,a,d){return cmd("svn",["checkout","file://"+b,c]).then(function(){return cmd("svn",["delete",c+"/branches/"+a],{cwd:c}).fail(function(){})}).then(function(){cmd("svn",["delete",c+"/tags/"+a],{cwd:c}).fail(function(e){})}).then(function(){var f;var e=[];mout.object.forOwn(d,function(h,g){g=path.join(c+"/trunk",g);if(typeof h!=="string"){h=JSON.stringify(h,null,"  ")}f=Q.nfcall(mkdirp,path.dirname(g)).then(function(){return Q.nfcall(fs.writeFile,g,h)});e.push(f)});return Q.all(e)}).then(cmd.bind(null,"svn",["add","--force","."],{cwd:c})).then(function(){if(!semver.valid(a)){return}return cmd("svn",["copy",c+"/trunk",c+"/tags/"+a],{cwd:c})}).then(function(){if(!semver.valid(a)){return}return cmd("svn",["copy",c+"/trunk",c+"/branches/"+a],{cwd:c})}).then(function(){return cmd("svn",["commit",'-m"SVN Setup'],{cwd:c,env:env})})}var promises=[];mout.object.forOwn(packages,function(d,c){var e;var a=path.join(__dirname,"assets",c,"admin");var b=path.join(__dirname,"assets",c,"repo");e=ensurePackage(a,b);e=e.fail(function(f){console.log("Failed to create "+c);console.log(f.message)});mout.object.forOwn(d,function(g,f){e=e.then(checkRelease.bind(null,b,f)).then(function(h){if(h){return console.log(chalk.cyan("> ")+"Package "+c+"#"+f+" already created")}return createRelease(a,b,f,g).then(function(){console.log(chalk.green("> ")+"Package "+c+"#"+f+" successfully created")})}).fail(function(h){console.log(chalk.red("> ")+"Failed to create "+c+"#"+f);console.log(h.message.trim());if(h.details){console.log(h.details.trim())}console.log(h.stack)})});promises.push(e)});Q.allSettled(promises,function(a){a.forEach(function(b){if(b.state!=="fulfilled"){process.exit(1)}})});