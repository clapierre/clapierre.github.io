function createInstance(r,e,t,n){return getConstructor(r.source,e,n).spread(function(n,o,u){var i=mout.object.pick(r,["name","target"]);return i.source=o,u&&(r.registry=!0,i.name||(i.name=r.name=r.source)),new n(i,e,t)})}function getConstructor(r,e,t){var n,o;return/^git(\+(ssh|https?))?:\/\//i.test(r)||/\.git\/?$/i.test(r)||/^git@/i.test(r)?(r=r.replace(/^git\+/,""),Q.fcall(function(){return resolvers.GitHub.getOrgRepoPair(r)?[resolvers.GitHub,r]:[resolvers.GitRemote,r]})):/^svn(\+(ssh|https?|file))?:\/\//i.test(r)?Q.fcall(function(){return[resolvers.Svn,r]}):/^https?:\/\//i.exec(r)?Q.fcall(function(){return[resolvers.Url,r]}):(n=path.resolve(e.cwd,r),o=/^\.\.?[\/\\]/.test(r)||/^~\//.test(r)||path.normalize(r).replace(/[\/\\]+$/,"")===n?Q.nfcall(fs.stat,path.join(n,".git")).then(function(r){if(r.isDirectory())return function(){return Q.resolve([resolvers.GitFs,n])};throw new Error("Not a Git repository")}).fail(function(){return Q.nfcall(fs.stat,path.join(n,".svn")).then(function(r){if(r.isDirectory())return function(){return Q.resolve([resolvers.Svn,n])};throw new Error("Not a Subversion repository")})}).fail(function(){return Q.nfcall(fs.stat,n).then(function(){return function(){return Q.resolve([resolvers.Fs,n])}})}):Q.reject(new Error("Not an absolute or relative file")),o.fail(function(n){var o;if(/[:@]/.test(r))throw n;if(o=r.split("/"),2===o.length)return r=mout.string.interpolate(e.shorthandResolver,{shorthand:r,owner:o[0],"package":o[1]}),function(){return getConstructor(r,e,t)};throw n}).fail(function(n){if(!t)throw n;return function(){return Q.nfcall(t.lookup.bind(t),r).then(function(n){if(!n)throw createError("Package "+r+" not found","ENOTFOUND");return r=n.url,getConstructor(r,e,t).spread(function(r,e){return[r,e,!0]})})}}).then(function(r){return r()},function(){throw createError("Could not find appropriate resolver for "+r,"ENORESOLVER")}))}function clearRuntimeCache(){mout.object.values(resolvers).forEach(function(r){r.clearRuntimeCache()})}var Q=require("q"),fs=require("graceful-fs"),path=require("path"),mout=require("mout"),resolvers=require("./resolvers"),createError=require("../util/createError");module.exports=createInstance,module.exports.getConstructor=getConstructor,module.exports.clearRuntimeCache=clearRuntimeCache;
