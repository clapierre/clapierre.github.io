var util=require("util");var path=require("path");var mout=require("mout");var GitRemoteResolver=require("./GitRemoteResolver");var download=require("../../util/download");var extract=require("../../util/extract");var createError=require("../../util/createError");function GitHubResolver(c,b,a){var d;GitRemoteResolver.call(this,c,b,a);d=GitHubResolver.getOrgRepoPair(this._source);if(!d){throw createError("Invalid GitHub URL","EINVEND",{details:this._source+" does not seem to be a valid GitHub URL"})}this._org=d.org;this._repo=d.repo;if(!mout.string.endsWith(this._source,".git")){this._source+=".git"}this._public=mout.string.startsWith(this._source,"git://");if(this._config.proxy||this._config.httpsProxy){this._source=this._source.replace("git://","https://")}this._shallowClone=true}util.inherits(GitHubResolver,GitRemoteResolver);mout.object.mixIn(GitHubResolver,GitRemoteResolver);GitHubResolver.prototype._checkout=function(){if(!this._public||!this._resolution.tag){return GitRemoteResolver.prototype._checkout.call(this)}var d;var c="https://github.com/"+this._org+"/"+this._repo+"/archive/"+this._resolution.tag+".tar.gz";var a=path.join(this._tempDir,"archive.tar.gz");var e={};var b=this;if(this._config.userAgent){e["User-Agent"]=this._config.userAgent}this._logger.action("download",c,{url:b._source,to:a});return download(c,a,{proxy:this._config.httpsProxy,strictSSL:this._config.strictSsl,timeout:this._config.timeout,headers:e}).progress(function(f){if(f.retry){d="Download of "+c+" failed with "+f.error.code+", ";d+="retrying in "+(f.delay/1000).toFixed(1)+"s";b._logger.debug("error",f.error.message,{error:f.error});return b._logger.warn("retry",d)}d="received "+(f.received/1024/1024).toFixed(1)+"MB";if(f.total){d+=" of "+(f.total/1024/1024).toFixed(1)+"MB downloaded, ";d+=f.percent+"%"}b._logger.info("progress",d)}).then(function(){b._logger.action("extract",path.basename(a),{archive:a,to:b._tempDir});return extract(a,b._tempDir).fail(function(f){d="Decompression of "+path.basename(a)+" failed"+(f.code?" with "+f.code:"")+", ";d+="trying with git..";b._logger.debug("error",f.message,{error:f});b._logger.warn("retry",d);return b._cleanTempDir().then(GitRemoteResolver.prototype._checkout.bind(b))})},function(f){d="Download of "+c+" failed"+(f.code?" with "+f.code:"")+", ";d+="trying with git..";b._logger.debug("error",f.message,{error:f});b._logger.warn("retry",d);return b._cleanTempDir().then(GitRemoteResolver.prototype._checkout.bind(b))})};GitHubResolver.prototype._savePkgMeta=function(a){if(!a.homepage){a.homepage="https://github.com/"+this._org+"/"+this._repo}return GitRemoteResolver.prototype._savePkgMeta.call(this,a)};GitHubResolver.getOrgRepoPair=function(b){var a;a=b.match(/(?:@|:\/\/)github.com[:\/]([^\/\s]+?)\/([^\/\s]+?)(?:\.git)?\/?$/i);if(!a){return null}return{org:a[1],repo:a[2]}};module.exports=GitHubResolver;