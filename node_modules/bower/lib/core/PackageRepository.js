var mout=require("mout");var Q=require("q");var RegistryClient=require("bower-registry-client");var ResolveCache=require("./ResolveCache");var resolverFactory=require("./resolverFactory");var createError=require("../util/createError");function PackageRepository(c,b){var a;this._config=c;this._logger=b;a=mout.object.deepMixIn({},this._config);a.cache=this._config.storage.registry;this._registryClient=new RegistryClient(a,b);this._resolveCache=new ResolveCache(this._config)}PackageRepository.prototype.fetch=function(d){var a;var c=this;var b;var e={decEndpoint:d};a=this._logger.geminate();a.intercept(function(f){c._extendLog(f,e)});return resolverFactory(d,this._config,a,this._registryClient).then(function(f){e.resolver=f;b=f.constructor.isTargetable;if(!f.isCacheable()){return c._resolve(f,a)}if(c._config.force){a.action("resolve",f.getSource()+"#"+f.getTarget());return c._resolve(f,a)}return c._resolveCache.retrieve(f.getSource(),f.getTarget()).spread(function(g,h){if(!g){if(c._config.offline){throw createError("No cached version for "+f.getSource()+"#"+f.getTarget(),"ENOCACHE",{resolver:f})}a.info("not-cached",f.getSource()+(f.getTarget()?"#"+f.getTarget():""));a.action("resolve",f.getSource()+"#"+f.getTarget());return c._resolve(f,a)}e.canonicalDir=g;e.pkgMeta=h;a.info("cached",f.getSource()+(h._release?"#"+h._release:""));if(c._config.offline){return[g,h,b]}a.action("validate",(h._release?h._release+" against ":"")+f.getSource()+(f.getTarget()?"#"+f.getTarget():""));return f.hasNew(g,h).then(function(i){if(!i){return[g,h,b]}a.info("new","version for "+f.getSource()+"#"+f.getTarget());a.action("resolve",f.getSource()+"#"+f.getTarget());return c._resolve(f,a)})})}).fail(function(f){c._extendLog(f,e);throw f})};PackageRepository.prototype.versions=function(a){return resolverFactory.getConstructor(a,this._config,this._registryClient).spread(function(b,c){if(this._config.offline){return this._resolveCache.versions(c)}return b.versions(c)}.bind(this))};PackageRepository.prototype.eliminate=function(a){return Q.all([this._resolveCache.eliminate(a),Q.nfcall(this._registryClient.clearCache.bind(this._registryClient),a.name)])};PackageRepository.prototype.clear=function(){return Q.all([this._resolveCache.clear(),Q.nfcall(this._registryClient.clearCache.bind(this._registryClient))])};PackageRepository.prototype.reset=function(){this._resolveCache.reset();this._registryClient.resetCache()};PackageRepository.prototype.list=function(){return this._resolveCache.list()};PackageRepository.prototype.getRegistryClient=function(){return this._registryClient};PackageRepository.prototype.getResolveCache=function(){return this._resolveCache};PackageRepository.clearRuntimeCache=function(){ResolveCache.clearRuntimeCache();RegistryClient.clearRuntimeCache();resolverFactory.clearRuntimeCache()};PackageRepository.prototype._resolve=function(c,a){var b=this;return c.resolve().then(function(d){if(!c.isCacheable()){return d}return b._resolveCache.store(d,c.getPkgMeta())}).then(function(d){var e=c.getPkgMeta();a.info("resolved",c.getSource()+(e._release?"#"+e._release:""));return[d,e,c.constructor.isTargetable()]})};PackageRepository.prototype._extendLog=function(a,b){a.data=a.data||{};if(b.decEndpoint){a.data.endpoint=mout.object.pick(b.decEndpoint,["name","source","target"])}if(b.resolver){a.data.resolver={name:b.resolver.getName(),source:b.resolver.getSource(),target:b.resolver.getTarget()}}if(b.canonicalDir){a.data.canonicalDir=b.canonicalDir;a.data.pkgMeta=b.pkgMeta}return a};module.exports=PackageRepository;