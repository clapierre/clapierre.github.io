var path=require("path");var fs=require("graceful-fs");var zlib=require("zlib");var DecompressZip=require("decompress-zip");var tar=require("tar-fs");var Q=require("q");var mout=require("mout");var junk=require("junk");var createError=require("./createError");zlib.Z_DEFAULT_CHUNK=1024*8;var extractors;var extractorTypes;extractors={".zip":extractZip,".tar":extractTar,".tar.gz":extractTarGz,".tgz":extractTarGz,".gz":extractGz,"application/zip":extractZip,"application/x-zip":extractZip,"application/x-zip-compressed":extractZip,"application/x-tar":extractTar,"application/x-tgz":extractTarGz,"application/x-gzip":extractGz};extractorTypes=Object.keys(extractors);function extractZip(b,c){var a=Q.defer();new DecompressZip(b).on("error",a.reject).on("extract",a.resolve.bind(a,c)).extract({path:c,follow:false,filter:filterSymlinks});return a.promise}function extractTar(b,c){var a=Q.defer();fs.createReadStream(b).on("error",a.reject).pipe(tar.extract(c,{ignore:isSymlink})).on("error",a.reject).on("finish",a.resolve.bind(a,c));return a.promise}function extractTarGz(b,c){var a=Q.defer();fs.createReadStream(b).on("error",a.reject).pipe(zlib.createGunzip()).on("error",a.reject).pipe(tar.extract(c,{ignore:isSymlink})).on("error",a.reject).on("finish",a.resolve.bind(a,c));return a.promise}function extractGz(b,c){var a=Q.defer();fs.createReadStream(b).on("error",a.reject).pipe(zlib.createGunzip()).on("error",a.reject).pipe(fs.createWriteStream(c)).on("error",a.reject).on("close",a.resolve.bind(a,c));return a.promise}function isSymlink(a){return a.type==="SymbolicLink"}function filterSymlinks(a){return a.type!=="SymbolicLink"}function getExtractor(a){a=a.toLowerCase();var b=mout.array.find(extractorTypes,function(c){return mout.string.endsWith(a,c)});return b?extractors[b]:null}function isSingleDir(a){return Q.nfcall(fs.readdir,a).then(function(b){var c;b=b.filter(junk.isnt);if(b.length!==1){return false}c=path.join(a,b[0]);return Q.nfcall(fs.stat,c).then(function(d){return d.isDirectory()?c:false})})}function moveSingleDirContents(a){var b=path.dirname(a);return Q.nfcall(fs.readdir,a).then(function(d){var c;c=d.map(function(e){var f=path.join(a,e);var g=path.join(b,e);return Q.nfcall(fs.rename,f,g)});return Q.all(c)}).then(function(){return Q.nfcall(fs.rmdir,a)})}function canExtract(b,a){if(a&&a!=="application/octet-stream"){return !!getExtractor(a)}return !!getExtractor(b)}function extract(d,e,a){var b;var c;a=a||{};b=getExtractor(d);if(!b&&a.mimeType){b=getExtractor(a.mimeType)}if(!b){return Q.reject(createError("File "+d+" is not a known archive","ENOTARCHIVE"))}c=Q.nfcall(fs.stat,d).then(function(f){if(f.size<=8){throw createError("File "+d+" is an invalid archive","ENOTARCHIVE")}return b(d,e)});if(!a.keepArchive){c=c.then(function(){return Q.nfcall(fs.unlink,d)})}if(!a.keepStructure){c=c.then(function(){return isSingleDir(e)}).then(function(f){return f?moveSingleDirContents(f):null})}return c.then(function(){return e})}module.exports=extract;module.exports.canExtract=canExtract;