function init(e,n){var t;return n=defaultConfig(n),n.interactive?(t=new Project(n,e),readJson(t,e).then(setDefaults.bind(null,n)).then(promptUser.bind(null,e)).spread(setIgnore.bind(null,n)).spread(setDependencies.bind(null,t)).spread(saveJson.bind(null,t,e))):(process.nextTick(function(){e.emit("error",createError("Register requires an interactive shell","ENOINT",{details:"Note that you can manually force an interactive shell with --config.interactive"}))}),e)}function readJson(e,n){return e.hasJson().then(function(t){return t&&n.warn("existing","The existing "+path.basename(t)+" file will be used and filled in"),e.getJson()})}function saveJson(e,n,t){return mout.object.forOwn(t,function(e,n){(null==e||mout.lang.isEmpty(e))&&delete t[n]}),n.info("json","Generated json",{json:t}),Q.nfcall(n.prompt.bind(n),{type:"confirm",message:"Looks good?","default":!0}).then(function(n){return n?e.saveJson(!0):null})}function setDefaults(e,n){var t,r=Q.resolve();return n.name||(n.name=path.basename(e.cwd)),n.version||(r=r.then(function(){return GitFsResolver.versions(e.cwd).then(function(e){n.version=e[0]||"0.0.0"},function(){n.version="0.0.0"})})),n.main||(t=path.basename(n.name,".js"),fs.existsSync(path.join(e.cwd,"index.js"))?n.main="index.js":fs.existsSync(path.join(e.cwd,t+".js"))&&(n.main=t+".js")),n.homepage||(r=r.then(function(){return cmd("git",["config","--get","remote.origin.url"]).spread(function(e){var t;e=e.trim(),e&&(t=GitHubResolver.getOrgRepoPair(e),t&&(n.homepage="https://github.com/"+t.org+"/"+t.repo))}).fail(function(){})})),n.authors||(r=r.then(function(){return cmd("git",["config","--get","--global","user.name"]).spread(function(e){var t,r=e.trim();return r?cmd("git",["config","--get","--global","user.email"]).spread(function(e){t=e.trim()},function(){}).then(function(){n.authors=r,n.authors+=t?" <"+t+">":""}):void 0},function(){})})),r.then(function(){return n})}function promptUser(e,n){var t=[{name:"name",message:"name","default":n.name,type:"input"},{name:"version",message:"version","default":n.version,type:"input"},{name:"description",message:"description","default":n.description,type:"input"},{name:"main",message:"main file","default":n.main,type:"input"},{name:"moduleType",message:"what types of modules does this package expose?",type:"checkbox",choices:["amd","es6","globals","node","yui"]},{name:"keywords",message:"keywords","default":n.keywords?n.keywords.toString():null,type:"input"},{name:"authors",message:"authors","default":n.authors?n.authors.toString():null,type:"input"},{name:"license",message:"license","default":n.license||"MIT",type:"input"},{name:"homepage",message:"homepage","default":n.homepage,type:"input"},{name:"dependencies",message:"set currently installed components as dependencies?","default":!mout.object.size(n.dependencies)&&!mout.object.size(n.devDependencies),type:"confirm"},{name:"ignore",message:"add commonly ignored files to ignore list?","default":!0,type:"confirm"},{name:"private",message:"would you like to mark this package as private which prevents it from being accidentally published to the registry?","default":!!n["private"],type:"confirm"}];return Q.nfcall(e.prompt.bind(e),t).then(function(e){return n.name=e.name,n.version=e.version,n.description=e.description,n.main=e.main,n.moduleType=e.moduleType,n.keywords=toArray(e.keywords),n.authors=toArray(e.authors,","),n.license=e.license,n.homepage=e.homepage,n["private"]=e["private"]||null,[n,e]})}function toArray(e,n){var t=e.split(n||/[\s,]/);return t=t.map(function(e){return e.trim()}),t=t.filter(function(e){return!!e}),t.length?t:null}function setIgnore(e,n,t){return t.ignore&&(n.ignore=mout.array.combine(n.ignore||[],["**/.*","node_modules","bower_components",e.directory,"test","tests"])),[n,t]}function setDependencies(e,n,t){return t.dependencies?e.getTree().spread(function(e,r,i){return i.length&&(n.dependencies={},i.forEach(function(e){var t;e.linked||(t=endpointParser.decomposed2json(e.endpoint),mout.object.mixIn(n.dependencies,t))})),[n,t]}):[n,t]}var mout=require("mout"),fs=require("graceful-fs"),path=require("path"),Q=require("q"),endpointParser=require("bower-endpoint-parser"),Project=require("../core/Project"),defaultConfig=require("../config"),GitHubResolver=require("../core/resolvers/GitHubResolver"),GitFsResolver=require("../core/resolvers/GitFsResolver"),cli=require("../util/cli"),cmd=require("../util/cmd"),createError=require("../util/createError");init.line=function(e,n){var t=cli.readOptions(n);return init(e,t)},init.completion=function(){},module.exports=init;
