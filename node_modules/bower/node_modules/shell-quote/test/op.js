var test=require("tape");var parse=require("../").parse;test("single operators",function(a){a.same(parse("beep | boop"),["beep",{op:"|"},"boop"]);a.same(parse("beep|boop"),["beep",{op:"|"},"boop"]);a.same(parse("beep \\| boop"),["beep","|","boop"]);a.same(parse('beep "|boop"'),["beep","|boop"]);a.same(parse("echo zing &"),["echo","zing",{op:"&"}]);a.same(parse("echo zing&"),["echo","zing",{op:"&"}]);a.same(parse("echo zing\\&"),["echo","zing&"]);a.same(parse('echo "zing\\&"'),["echo","zing\\&"]);a.same(parse("beep;boop"),["beep",{op:";"},"boop"]);a.same(parse("(beep;boop)"),[{op:"("},"beep",{op:";"},"boop",{op:")"}]);a.same(parse("beep>boop"),["beep",{op:">"},"boop"]);a.same(parse("beep 2>boop"),["beep","2",{op:">"},"boop"]);a.same(parse("beep<boop"),["beep",{op:"<"},"boop"]);a.end()});test("double operators",function(a){a.same(parse("beep || boop"),["beep",{op:"||"},"boop"]);a.same(parse("beep||boop"),["beep",{op:"||"},"boop"]);a.same(parse("beep ||boop"),["beep",{op:"||"},"boop"]);a.same(parse("beep|| boop"),["beep",{op:"||"},"boop"]);a.same(parse("beep  ||   boop"),["beep",{op:"||"},"boop"]);a.same(parse("beep && boop"),["beep",{op:"&&"},"boop"]);a.same(parse("beep && boop || byte"),["beep",{op:"&&"},"boop",{op:"||"},"byte"]);a.same(parse("beep&&boop||byte"),["beep",{op:"&&"},"boop",{op:"||"},"byte"]);a.same(parse("beep\\&\\&boop||byte"),["beep&&boop",{op:"||"},"byte"]);a.same(parse("beep\\&&boop||byte"),["beep&",{op:"&"},"boop",{op:"||"},"byte"]);a.same(parse("beep;;boop|&byte"),["beep",{op:";;"},"boop",{op:"|&"},"byte"]);a.end()});test("glob patterns",function(a){a.same(parse("tap test/*.test.js"),["tap",{op:"glob",pattern:"test/*.test.js"}]);a.same(parse('tap "test/*.test.js"'),["tap","test/*.test.js"]);a.end()});