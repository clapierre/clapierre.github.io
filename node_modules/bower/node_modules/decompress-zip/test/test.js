"use strict";var assert=require("chai").assert;var DecompressZip=require("../lib/decompress-zip");var pkg=require("../package.json");var path=require("path");var glob=require("glob");var exec=require("child_process").exec;var tmp=require("tmp");var assetsPath=path.join(__dirname,"assets");var samples=glob.sync("*/archive.zip",{cwd:assetsPath});if(samples.length===0){console.log('No sample ZIP files were found. Run "grunt test-files" to download them.');process.exit(1)}describe("Smoke test",function(){it("should find the public interface",function(){assert.strictEqual(DecompressZip.version,pkg.version,"DecompressZip.version is correct");assert.isFunction(DecompressZip,"constructor is a function");assert.isFunction(DecompressZip.prototype.list,"decompress.list is a function");assert.isFunction(DecompressZip.prototype.extract,"decompress.extract is a function")})});describe("Extract",function(){describe("errors",function(){var a;before(function(b){tmp.dir({unsafeCleanup:true},function(d,c){if(d){throw d}a=c;b()})});it("should emit an error when the file does not exist",function(b){var c=new DecompressZip("/my/non/existant/file.zip");c.on("extract",function(){assert(false,'"extract" event should not fire');b()});c.on("error",function(d){assert(true,'"error" event should fire');b()});c.extract({path:a})});it("should emit an error when stripping deeper than the path structure",function(b){var c=new DecompressZip(path.join(assetsPath,samples[0]));c.on("extract",function(){assert(false,'"extract" event should not fire');b()});c.on("error",function(d){assert(true,'"error" event should fire');b()});c.extract({path:a,strip:3})})});samples.forEach(function(b){var a=path.join(path.dirname(b),"extracted");describe(b,function(){var c;before(function(d){tmp.dir({unsafeCleanup:true},function(f,e){if(f){throw f}c=e;d()})});it("should extract without any errors",function(d){this.timeout(60000);var e=new DecompressZip(path.join(assetsPath,b));e.on("extract",function(){assert(true,"success callback should be called");d()});e.on("error",function(){assert(false,"error callback should not be called");d()});e.extract({path:c})});it("should have the same output files as expected",function(d){exec("diff -qr "+a+" "+c,{cwd:assetsPath},function(g,e,f){if(g){if(g.code===1){assert(false,"output should match")}else{throw g}}assert.equal(e,"");assert.equal(f,"");d()})})})})});