"use strict";var fs=require("graceful-fs");var Q=require("q");var path=require("path");var util=require("util");var events=require("events");var structures=require("./structures");var signatures=require("./signatures");var extractors=require("./extractors");var FileDetails=require("./file-details");var fstat=Q.denodeify(fs.fstat);var read=Q.denodeify(fs.read);var fopen=Q.denodeify(fs.open);function DecompressZip(a){events.EventEmitter.call(this);this.filename=a;this.stats=null;this.fd=null;this.chunkSize=1024*1024;this._p={}}util.inherits(DecompressZip,events.EventEmitter);DecompressZip.version=require("../package.json").version;DecompressZip.prototype.openFile=function(){return fopen(this.filename,"r")};DecompressZip.prototype.closeFile=function(){if(this.fd){fs.closeSync(this.fd);this.fd=null}};DecompressZip.prototype.statFile=function(a){this.fd=a;return fstat(a)};DecompressZip.prototype.list=function(){var a=this;this.getFiles().then(function(c){var b=[];c.forEach(function(d){b.push(d.path)});a.emit("list",b)}).fail(function(b){a.emit("error",b)}).fin(a.closeFile.bind(a));return this};DecompressZip.prototype.extract=function(b){var a=this;b=b||{};b.path=b.path||".";b.filter=b.filter||null;b.follow=!!b.follow;b.strip=+b.strip||0;this.getFiles().then(function(c){var d=[];if(b.filter){c=c.filter(b.filter)}if(b.follow){d=c.filter(function(e){return e.type==="SymbolicLink"});c=c.filter(function(e){return e.type!=="SymbolicLink"})}if(b.strip){c=c.map(function(g){if(g.type!=="Directory"){var f=g.parent.split(path.sep);var e=g.filename;if(b.strip>f.length){throw new Error("You cannot strip more levels than there are directories")}else{f=f.slice(b.strip)}return g.path=path.join(f.join(path.sep),e)}})}return a.extractFiles(c,b).then(a.extractFiles.bind(a,d,b))}).then(function(c){a.emit("extract",c)}).fail(function(c){a.emit("error",c)}).fin(a.closeFile.bind(a));return this};DecompressZip.prototype.getSearchBuffer=function(b){var a=Math.min(b.size,this.chunkSize);this.stats=b;return this.getBuffer(b.size-a,b.size)};DecompressZip.prototype.getBuffer=function(c,a){var b=a-c;return read(this.fd,new Buffer(b),0,b,c).then(function(d){return d[1]})};DecompressZip.prototype.findEndOfDirectory=function(a){var c=a.length-3;var b="";while(c>Math.max(a.length-this.chunkSize,0)&&b!==signatures.END_OF_CENTRAL_DIRECTORY){c--;b=a.readUInt32LE(c)}if(b!==signatures.END_OF_CENTRAL_DIRECTORY){throw new Error("Could not find the End of Central Directory Record")}return a.slice(c)};DecompressZip.prototype.readDirectory=function(b){var a=structures.readEndRecord(b);return this.getBuffer(a.directoryOffset,a.directoryOffset+a.directorySize).then(structures.readDirectory.bind(null))};DecompressZip.prototype.getFiles=function(){if(!this._p.getFiles){this._p.getFiles=this.openFile().then(this.statFile.bind(this)).then(this.getSearchBuffer.bind(this)).then(this.findEndOfDirectory.bind(this)).then(this.readDirectory.bind(this)).then(this.readFileEntries.bind(this))}return this._p.getFiles};DecompressZip.prototype.readFileEntries=function(a){var c=[];var d=[];var b=this;a.forEach(function(f,g){var j=f.relativeOffsetOfLocalHeader;var e=Math.min(b.stats.size,j+structures.maxFileEntrySize);var h=new FileDetails(f);var i=b.getBuffer(j,e).then(structures.readFileEntry.bind(null)).then(function(l){var k;if(h.compressedSize>0){k=h.compressedSize}else{k=b.stats.size;if(g<a.length-1){k=a[g+1].relativeOffsetOfLocalHeader}k-=j+l.entryLength}h._offset=j+l.entryLength;h._maxSize=k;b.emit("file",h);d[g]=h});c.push(i)});return Q.all(c).then(function(){return d})};DecompressZip.prototype.extractFiles=function(e,b,d){var c=[];var a=this;d=d||[];e.forEach(function(f){var g=a.extractFile(f,b).then(function(h){d.push(h)});c.push(g)});return Q.all(c).then(function(){return d})};DecompressZip.prototype.extractFile=function(c,b){var a=path.join(b.path,c.path);if(c.type==="Directory"){return extractors.folder(c,a)}if(c.type==="File"){switch(c.compressionMethod){case 0:return extractors.store(c,a,this);case 8:return extractors.deflate(c,a,this);default:throw new Error("Unsupported compression type")}}if(c.type==="SymbolicLink"){if(b.follow){return extractors.copy(c,a,this,b.path)}else{return extractors.symlink(c,a,this,b.path)}}throw new Error('Unsupported file type "'+c.type+'"')};module.exports=DecompressZip;