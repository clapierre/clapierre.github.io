function PromptUI(){Base.call(this)}var _=require("lodash"),rx=require("rx"),util=require("util"),utils=require("../utils/utils"),Base=require("./baseUI"),inquirer=require("../inquirer");module.exports=PromptUI,util.inherits(PromptUI,Base),PromptUI.prototype.run=function(t,e){this.answers={},this.completed=e,_.isPlainObject(t)&&(t=[t]);var r=_.isArray(t)?rx.Observable.fromArray(t):t;return this.process=r.concatMap(this.processQuestion.bind(this)),this.process.forEach(function(){},function(t){throw t},this.onCompletion.bind(this)),this.process},PromptUI.prototype.onCompletion=function(){this.close(),_.isFunction(this.completed)&&this.completed(this.answers)},PromptUI.prototype.processQuestion=function(t){return rx.Observable.defer(function(){var e=rx.Observable.create(function(e){e.onNext(t),e.onCompleted()});return e.concatMap(this.setDefaultType).concatMap(this.filterIfRunnable.bind(this)).concatMap(utils.fetchAsyncQuestionProperty.bind(null,t,"default",this.answers)).concatMap(utils.fetchAsyncQuestionProperty.bind(null,t,"choices",this.answers)).concatMap(this.fetchAnswer.bind(this))}.bind(this))},PromptUI.prototype.fetchAnswer=function(t){var e=new inquirer.prompts[t.type](t,this.rl,this.answers),r=this.answers;return utils.createObservableFromAsync(function(){var n=this.async();e.run(function(e){r[t.name]=e,n({name:t.name,answer:e})})})},PromptUI.prototype.setDefaultType=function(t){return inquirer.prompts[t.type]||(t.type="input"),rx.Observable.defer(function(){return rx.Observable["return"](t)})},PromptUI.prototype.filterIfRunnable=function(t){if(!_.isFunction(t.when))return rx.Observable["return"](t);var e=this.answers;return rx.Observable.defer(function(){return rx.Observable.create(function(r){utils.runAsync(t.when,function(e){e&&r.onNext(t),r.onCompleted()},e)})})};
