var fs=module.exports=require("./fs.js");var assert=require("assert");require("./polyfills.js");var util=require("util");function noop(){}var debug=noop;if(util.debuglog){debug=util.debuglog("gfs")}else{if(/\bgfs\b/i.test(process.env.NODE_DEBUG||"")){debug=function(){var a=util.format.apply(util,arguments);a="GFS: "+a.split(/\n/).join("\nGFS: ");console.error(a)}}}if(/\bgfs\b/i.test(process.env.NODE_DEBUG||"")){process.on("exit",function(){debug("fds",fds);debug(queue);assert.equal(queue.length,0)})}var originalOpen=fs.open;fs.open=open;function open(c,b,d,a){if(typeof d==="function"){a=d,d=null}if(typeof a!=="function"){a=noop}new OpenReq(c,b,d,a)}function OpenReq(c,b,d,a){this.path=c;this.flags=b;this.mode=d;this.cb=a;Req.call(this)}util.inherits(OpenReq,Req);OpenReq.prototype.process=function(){originalOpen.call(fs,this.path,this.flags,this.mode,this.done)};var fds={};OpenReq.prototype.done=function(b,a){debug("open done",b,a);if(a){fds["fd"+a]=this.path}Req.prototype.done.call(this,b,a)};var originalReaddir=fs.readdir;fs.readdir=readdir;function readdir(b,a){if(typeof a!=="function"){a=noop}new ReaddirReq(b,a)}function ReaddirReq(b,a){this.path=b;this.cb=a;Req.call(this)}util.inherits(ReaddirReq,Req);ReaddirReq.prototype.process=function(){originalReaddir.call(fs,this.path,this.done)};ReaddirReq.prototype.done=function(b,a){if(a&&a.sort){a=a.sort()}Req.prototype.done.call(this,b,a);onclose()};var originalClose=fs.close;fs.close=close;function close(b,a){debug("close",b);if(typeof a!=="function"){a=noop}delete fds["fd"+b];originalClose.call(fs,b,function(c){onclose();a(c)})}var originalCloseSync=fs.closeSync;fs.closeSync=closeSync;function closeSync(a){try{return originalCloseSync(a)}finally{onclose()}}function Req(){this.done=this.done.bind(this);this.failures=0;this.process()}Req.prototype.done=function(e,b){var d=false;if(e){var c=e.code;var d=c==="EMFILE"||c==="ENFILE";if(process.platform==="win32"){d=d||c==="OK"}}if(d){this.failures++;enqueue(this)}else{var a=this.cb;a(e,b)}};var queue=[];function enqueue(a){queue.push(a);debug("enqueue %d %s",queue.length,a.constructor.name,a)}function onclose(){var a=queue.shift();if(a){debug("process",a.constructor.name,a);a.process()}};