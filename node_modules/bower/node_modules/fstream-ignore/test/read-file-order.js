var IgnoreFile=require("../"),fs=require("fs");var c=require("./common.js");c.ignores({".gitignore":["a/b/c/abc"]});c.ignores({".ignore":["*","!a/b/c/abc"]});var expected=["/a","/a/b","/a/b/c","/a/b/c/abc"];var originalReadFile=fs.readFile,parallelCount=0,firstCall;fs.readFile=function(a,b,d){if(typeof b==="function"){d=b;b=false}parallelCount++;process.nextTick(function(){if(parallelCount>1){if(!firstCall){return firstCall=function(e){originalReadFile(a,b,function(f,g){d(f,g);if(e){e()}})}}if(a.indexOf(".gitignore")!==-1){firstCall(function(){originalReadFile(a,b,d)})}else{originalReadFile(a,b,function(e,f){d(e,f);firstCall()})}}else{originalReadFile(a,b,d);parallelCount=0}})};require("tap").test("read file order",function(a){a.pass("start");IgnoreFile({path:__dirname+"/fixtures",ignoreFiles:[".gitignore",".ignore"]}).on("ignoreFile",function(b){console.error("ignore file!",b)}).on("child",function(f){var d=f.path.substr(f.root.path.length);var b=expected.indexOf(d);if(b===-1){a.fail("unexpected file found",{f:d})}else{a.pass(d);expected.splice(b,1)}}).on("close",function(){fs.readFile=originalReadFile;a.notOk(expected.length,"all expected files should be seen");a.end()})});