var EventEmitter=require("events").EventEmitter;var util=require("util");var slice=Array.prototype.slice;function Logger(){this._interceptors=[];this._piped=[]}util.inherits(Logger,EventEmitter);Logger.prototype.intercept=function(a){this._interceptors.push(a);return this};Logger.prototype.emit=function(){var b;var a=slice.call(arguments);if(a[0]==="log"){this._interceptors.forEach(function(c){c.apply(this,a.slice(1))})}b=EventEmitter.prototype.emit.apply(this,a);this._piped.forEach(function(c){c.emit.apply(c,a)});return b};Logger.prototype.pipe=function(a){this._piped.push(a);return a};Logger.prototype.geminate=function(){var a=new Logger();a.pipe(this);return a};Logger.prototype.log=function(e,d,b,c){var a={level:e,id:d,message:b,data:c||{}};this.emit("log",a);return this};Logger.prototype.prompt=function(a,h){var d;var c;var f;var g;var b;var e=Logger._validPrompts;if(!Array.isArray(a)){a.name="prompt";a=[a];c=true}f=a.some(function(i){return e.indexOf(i.type)===-1});if(f){b=new Error("Unknown prompt type");b.code="ENOTSUP";return h(b)}d=function(i){if(g){return}Object.keys(i).forEach(function(j){var k=i[j];if(typeof k==="string"){i[j]=k.trim()}else{if(Array.isArray(k)){i[j]=k.map(function(l){if(typeof l==="string"){return l.trim()}})}}});g=true;if(c){i=i.prompt}h(null,i)};this.emit("prompt",a,d)};Logger._validPrompts=["input","confirm","password","checkbox"];Logger.LEVELS={error:5,conflict:4,warn:3,action:2,info:1,debug:0};Object.keys(Logger.LEVELS).forEach(function(a){Logger.prototype[a]=function(d,b,c){this.log(a,d,b,c)}});module.exports=Logger;