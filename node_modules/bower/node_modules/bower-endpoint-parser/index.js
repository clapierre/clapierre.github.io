function decompose(e){var b=/^(?:([\w\-]|(?:[\w\.\-]+[\w\-])?)=)?([^\|#]+)(?:#(.*))?$/;var c=e.match(b);var d;var a;if(!c){a=new Error("Invalid endpoint: "+e);a.code="EINVEND";throw a}d=trim(c[3]);return{name:trim(c[1]),source:trim(c[2]),target:isWildcard(d)?"*":d}}function compose(c){var a=trim(c.name);var d=trim(c.source);var e=trim(c.target);var b="";if(a){b+=a+"="}b+=d;if(!isWildcard(e)){b+="#"+e}return b}function json2decomposed(c,d){var e;var b;var a;c=trim(c);d=trim(d);if(!c){a=new Error("The key must be specified");a.code="EINVEND";throw a}e=c+"=";b=d.split("#").map(trim);if(b.length>1){e+=(b[0]||c)+"#"+b[1]}else{if(isSource(d)){e+=d+"#*"}else{e+=c+"#"+b[0]}}return decompose(e)}function decomposed2json(d){var c;var b=trim(d.name);var f=trim(d.source);var g=trim(d.target);var e="";var a={};if(!b){c=new Error("Decomposed endpoint must have a name");c.code="EINVEND";throw c}if(f!==b){e+=f}if(!e){if(isWildcard(g)){e+="*"}else{if(g.indexOf("/")!==-1){e+="#"+g}else{e+=g}}}else{if(!isWildcard(g)||!isSource(f)){e+="#"+(g||"*")}}a[b]=e;return a}function trim(a){return a?a.trim():""}function isWildcard(a){return !a||a==="*"||a==="latest"}function isSource(a){return(/[\/\\@]/).test(a)}module.exports.decompose=decompose;module.exports.compose=compose;module.exports.json2decomposed=json2decomposed;module.exports.decomposed2json=decomposed2json;