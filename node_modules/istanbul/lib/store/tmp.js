var util=require("util"),path=require("path"),os=require("os"),fs=require("fs"),mkdirp=require("mkdirp"),Store=require("./index");function makeTempDir(){var a=path.join(os.tmpDir?os.tmpDir():(process.env.TMPDIR||"/tmp"),"ts"+new Date().getTime());mkdirp.sync(a);return a}function TmpStore(a){a=a||{};this.tmp=a.tmp||makeTempDir();this.map={};this.seq=0;this.prefix="t"+new Date().getTime()+"-"}TmpStore.TYPE="tmp";util.inherits(TmpStore,Store);Store.mix(TmpStore,{generateTmpFileName:function(){this.seq+=1;return this.prefix+this.seq+".tmp"},set:function(b,c){var a=this.generateTmpFileName();fs.writeFileSync(a,c,"utf8");this.map[b]=a},get:function(b){var a=this.map[b];if(!a){throw new Error("Unable to find tmp entry for ["+a+"]")}return fs.readFileSync(a,"utf8")},hasKey:function(a){return !!this.map[a]},keys:function(){return Object.keys(this.map)},dispose:function(){var a=this.map;Object.keys(a).forEach(function(b){fs.unlinkSync(a[b])});this.map={}}});module.exports=TmpStore;