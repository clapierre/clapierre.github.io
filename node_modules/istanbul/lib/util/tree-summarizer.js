var path=require("path"),SEP=path.sep||"/",utils=require("../object-utils");function commonArrayPrefix(e,c){var a=e.length<c.length?e.length:c.length,d,b=[];for(d=0;d<a;d+=1){if(e[d]===c[d]){b.push(e[d])}else{break}}return b}function findCommonArrayPrefix(c){if(c.length===0){return[]}var a=c.map(function(d){return d.split(SEP)}),b=a.pop();if(a.length===0){return b.slice(0,b.length-1)}else{return a.reduce(commonArrayPrefix,b)}}function Node(c,b,a){this.name=c;this.fullName=c;this.kind=b;this.metrics=a||null;this.parent=null;this.children=[]}Node.prototype={displayShortName:function(){return this.relativeName},fullPath:function(){return this.fullName},addChild:function(a){this.children.push(a);a.parent=this},toJSON:function(){return{name:this.name,relativeName:this.relativeName,fullName:this.fullName,kind:this.kind,metrics:this.metrics,parent:this.parent===null?null:this.parent.name,children:this.children.map(function(a){return a.toJSON()})}}};function TreeSummary(b,a){this.prefix=a;this.convertToTree(b,a)}TreeSummary.prototype={getNode:function(a){return this.map[a]},convertToTree:function(d,f){var b=[],i=f.join(SEP)+SEP,e=new Node(i,"dir"),c,h,a={},g=false;a[i]=e;Object.keys(d).forEach(function(k){var m=d[k],n,j,l;n=new Node(k,"file",m);a[k]=n;b.push(n);j=path.dirname(k)+SEP;if(j===SEP+SEP||j==="."+SEP){j=SEP+"__root__"+SEP}l=a[j];if(!l){l=new Node(j,"dir");e.addChild(l);a[j]=l}l.addChild(n);if(l===e){g=true}});if(g&&f.length>0){f.pop();c=e;h=c.children;c.children=[];e=new Node(f.join(SEP)+SEP,"dir");e.addChild(c);h.forEach(function(j){if(j.kind==="dir"){e.addChild(j)}else{c.addChild(j)}})}this.fixupNodes(e,f.join(SEP)+SEP);this.calculateMetrics(e);this.root=e;this.map={};this.indexAndSortTree(e,this.map)},fixupNodes:function(c,d,a){var b=this;if(c.name.indexOf(d)===0){c.name=c.name.substring(d.length)}if(c.name.charAt(0)===SEP){c.name=c.name.substring(1)}if(a){if(a.name!=="__root__"+SEP){c.relativeName=c.name.substring(a.name.length)}else{c.relativeName=c.name}}else{c.relativeName=c.name.substring(d.length)}c.children.forEach(function(e){b.fixupNodes(e,d,c)})},calculateMetrics:function(c){var b=this,a;if(c.kind!=="dir"){return}c.children.forEach(function(d){b.calculateMetrics(d)});c.metrics=utils.mergeSummaryObjects.apply(null,c.children.map(function(d){return d.metrics}));a=c.children.filter(function(d){return d.kind!=="dir"});if(a.length>0){c.packageMetrics=utils.mergeSummaryObjects.apply(null,a.map(function(d){return d.metrics}))}else{c.packageMetrics=null}},indexAndSortTree:function(b,c){var a=this;c[b.name]=b;b.children.sort(function(e,d){e=e.relativeName;d=d.relativeName;return e<d?-1:e>d?1:0});b.children.forEach(function(d){a.indexAndSortTree(d,c)})},toJSON:function(){return{prefix:this.prefix,root:this.root.toJSON()}}};function TreeSummarizer(){this.summaryMap={}}TreeSummarizer.prototype={addFileCoverageSummary:function(a,b){this.summaryMap[a]=b},getTreeSummary:function(){var a=findCommonArrayPrefix(Object.keys(this.summaryMap));return new TreeSummary(this.summaryMap,a)}};module.exports=TreeSummarizer;