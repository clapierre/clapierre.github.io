var util=require("util"),path=require("path"),fs=require("fs"),abbrev=require("abbrev");function Factory(b,a,c){this.kind=b;this.dir=a;this.allowAbbreviations=c;this.classMap={};this.abbreviations=null}Factory.prototype={knownTypes:function(){var a=Object.keys(this.classMap);a.sort();return a},resolve:function(a){if(!this.abbreviations){this.abbreviations=abbrev(this.knownTypes())}return this.abbreviations[a]},register:function(b){var a=b.TYPE;if(!a){throw new Error("Could not register "+this.kind+" constructor [no TYPE property]: "+util.inspect(b))}this.classMap[a]=b;this.abbreviations=null},create:function(c,d){var b=this.allowAbbreviations,a=b?this.resolve(c):c,e;e=a?this.classMap[a]:null;if(!e){throw new Error("Invalid "+this.kind+" ["+c+"], allowed values are "+this.knownTypes().join(", "))}return new e(d)},loadStandard:function(a){var b=this;fs.readdirSync(a).forEach(function(d){if(d!=="index.js"&&d.indexOf(".js")===d.length-3){try{b.register(require(path.resolve(a,d)))}catch(c){console.error(c.message);console.error(c.stack);throw new Error("Could not register "+b.kind+" from file "+d)}}})},bindClassMethods:function(c){var a=this.kind.charAt(0).toUpperCase()+this.kind.substring(1),b=this.allowAbbreviations;c.mix=Factory.mix;c.register=this.register.bind(this);c.create=this.create.bind(this);c.loadAll=this.loadStandard.bind(this,this.dir);c["get"+a+"List"]=this.knownTypes.bind(this);if(b){c["resolve"+a+"Name"]=this.resolve.bind(this)}}};Factory.mix=function(a,b){Object.keys(b).forEach(function(c){a.prototype[c]=b[c]})};module.exports=Factory;