var path=require("path"),Writer=require("../util/file-writer"),util=require("util"),Report=require("./index"),utils=require("../object-utils");function LcovOnlyReport(a){this.opts=a||{};this.opts.dir=this.opts.dir||process.cwd();this.opts.file=this.opts.file||this.getDefaultConfig().file;this.opts.writer=this.opts.writer||null}LcovOnlyReport.TYPE="lcovonly";util.inherits(LcovOnlyReport,Report);Report.mix(LcovOnlyReport,{synopsis:function(){return"lcov coverage report that can be consumed by the lcov tool"},getDefaultConfig:function(){return{file:"lcov.info"}},writeFileCoverage:function(f,e){var h=e.f,g=e.fnMap,b=e.l,c=e.b,a=e.branchMap,d=utils.summarizeFileCoverage(e);f.println("TN:");f.println("SF:"+e.path);Object.keys(h).forEach(function(i){var j=g[i];f.println("FN:"+[j.line,j.name].join(","))});f.println("FNF:"+d.functions.total);f.println("FNH:"+d.functions.covered);Object.keys(h).forEach(function(j){var i=h[j],k=g[j];f.println("FNDA:"+[i,k.name].join(","))});Object.keys(b).forEach(function(i){var j=b[i];f.println("DA:"+[i,j].join(","))});f.println("LF:"+d.lines.total);f.println("LH:"+d.lines.covered);Object.keys(c).forEach(function(l){var n=c[l],m=a[l],j=m.line,k=0;n.forEach(function(i){f.println("BRDA:"+[j,l,k,i].join(","));k+=1})});f.println("BRF:"+d.branches.total);f.println("BRH:"+d.branches.covered);f.println("end_of_record")},writeReport:function(e,b){var d=path.resolve(this.opts.dir,this.opts.file),c=this.opts.writer||new Writer(b),a=this;c.on("done",function(){a.emit("done")});c.writeFile(d,function(f){e.files().forEach(function(g){a.writeFileCoverage(f,e.fileCoverageFor(g))})});c.done()}});module.exports=LcovOnlyReport;