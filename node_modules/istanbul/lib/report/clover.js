var path=require("path"),util=require("util"),Report=require("./index"),FileWriter=require("../util/file-writer"),TreeSummarizer=require("../util/tree-summarizer"),utils=require("../object-utils");function CloverReport(a){Report.call(this);a=a||{};this.projectRoot=process.cwd();this.dir=a.dir||this.projectRoot;this.file=a.file||this.getDefaultConfig().file;this.opts=a}CloverReport.TYPE="clover";util.inherits(CloverReport,Report);function asJavaPackage(a){return a.displayShortName().replace(/\//g,".").replace(/\\/g,".").replace(/\.$/,"")}function asClassName(a){return a.fullPath().replace(/.*[\\\/]/,"")}function quote(a){return'"'+a+'"'}function attr(b,a){return" "+b+"="+quote(a)+" "}function branchCoverageByLine(d){var a=d.branchMap,b=d.b,c={};Object.keys(a).forEach(function(f){var e=a[f].line,g=b[f];c[e]=c[e]||[];c[e].push.apply(c[e],g)});Object.keys(c).forEach(function(g){var e=c[g],f=e.filter(function(i){return i>0}),h=f.length/e.length*100;c[g]={covered:f.length,total:e.length,coverage:h}});return c}function addClassStats(d,f,e){f=utils.incrementIgnoredTotals(f);var c=d.metrics,g=branchCoverageByLine(f),a,b;e.println("\t\t\t<file"+attr("name",asClassName(d))+attr("path",d.fullPath())+">");e.println("\t\t\t\t<metrics"+attr("statements",c.lines.total)+attr("coveredstatements",c.lines.covered)+attr("conditionals",c.branches.total)+attr("coveredconditionals",c.branches.covered)+attr("methods",c.functions.total)+attr("coveredmethods",c.functions.covered)+"/>");a=f.fnMap;b=f.l;Object.keys(b).forEach(function(i){var j="\t\t\t\t<line"+attr("num",i)+attr("count",b[i]),h=g[i];if(!h){j+=' type="stmt" '}else{j+=' type="cond" '+attr("truecount",h.covered)+attr("falsecount",(h.total-h.covered))}e.println(j+"/>")});e.println("\t\t\t</file>")}function walk(d,h,e,a,i){var j,g=0,b=0,f=0,c=0;if(a===0){j=d.metrics;e.println('<?xml version="1.0" encoding="UTF-8"?>');e.println("<coverage"+attr("generated",Date.now())+'clover="3.2.0">');e.println("\t<project"+attr("timestamp",Date.now())+attr("name","All Files")+">");d.children.filter(function(k){return k.kind==="dir"}).forEach(function(k){b+=1;k.children.filter(function(l){return l.kind!=="dir"}).forEach(function(l){Object.keys(h.fileCoverageFor(l.fullPath()).l).forEach(function(m){c=m});f+=Number(c);g+=1})});e.println("\t\t<metrics"+attr("statements",j.lines.total)+attr("coveredstatements",j.lines.covered)+attr("conditionals",j.branches.total)+attr("coveredconditionals",j.branches.covered)+attr("methods",j.functions.total)+attr("coveredmethods",j.functions.covered)+attr("elements",j.lines.total+j.branches.total+j.functions.total)+attr("coveredelements",j.lines.covered+j.branches.covered+j.functions.covered)+attr("complexity",0)+attr("packages",b)+attr("files",g)+attr("classes",g)+attr("loc",f)+attr("ncloc",f)+"/>")}if(d.packageMetrics){j=d.packageMetrics;e.println("\t\t<package"+attr("name",asJavaPackage(d))+">");e.println("\t\t\t<metrics"+attr("statements",j.lines.total)+attr("coveredstatements",j.lines.covered)+attr("conditionals",j.branches.total)+attr("coveredconditionals",j.branches.covered)+attr("methods",j.functions.total)+attr("coveredmethods",j.functions.covered)+"/>");d.children.filter(function(k){return k.kind!=="dir"}).forEach(function(k){addClassStats(k,h.fileCoverageFor(k.fullPath()),e)});e.println("\t\t</package>")}d.children.filter(function(k){return k.kind==="dir"}).forEach(function(k){walk(k,h,e,a+1,i)});if(a===0){e.println("\t</project>");e.println("</coverage>")}}Report.mix(CloverReport,{synopsis:function(){return"XML coverage report that can be consumed by the clover tool"},getDefaultConfig:function(){return{file:"clover.xml"}},writeReport:function(c,h){var a=new TreeSummarizer(),e=path.join(this.dir,this.file),b=this.opts.writer||new FileWriter(h),f=this.projectRoot,d=this,i,g;c.files().forEach(function(j){a.addFileCoverageSummary(j,utils.summarizeFileCoverage(c.fileCoverageFor(j)))});i=a.getTreeSummary();g=i.root;b.on("done",function(){d.emit("done")});b.writeFile(e,function(j){walk(g,c,j,0,f);b.done()})}});module.exports=CloverReport;