var path=require("path"),objectUtils=require("../object-utils"),Writer=require("../util/file-writer"),util=require("util"),Report=require("./index");function JsonSummaryReport(a){this.opts=a||{};this.opts.dir=this.opts.dir||process.cwd();this.opts.file=this.opts.file||this.getDefaultConfig().file;this.opts.writer=this.opts.writer||null}JsonSummaryReport.TYPE="json-summary";util.inherits(JsonSummaryReport,Report);Report.mix(JsonSummaryReport,{synopsis:function(){return"prints a summary coverage object as JSON to a file"},getDefaultConfig:function(){return{file:"coverage-summary.json"}},writeReport:function(g,d){var f=path.resolve(this.opts.dir,this.opts.file),e=this.opts.writer||new Writer(d),c=this;var b=[],a;g.files().forEach(function(h){b.push(objectUtils.summarizeFileCoverage(g.fileCoverageFor(h)))});a=objectUtils.mergeSummaryObjects.apply(null,b);e.on("done",function(){c.emit("done")});e.writeFile(f,function(h){h.println("{");h.write('"total":');h.write(JSON.stringify(a));g.files().forEach(function(i){h.println(",");h.write(JSON.stringify(i));h.write(":");h.write(JSON.stringify(objectUtils.summarizeFileCoverage(g.fileCoverageFor(i))))});h.println("}")});e.done()}});module.exports=JsonSummaryReport;