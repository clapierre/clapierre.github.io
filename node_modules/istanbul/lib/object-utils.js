(function(l){function b(s){var r=s.statementMap,p=s.s,q;if(!s.l){s.l=q={};Object.keys(p).forEach(function(u){var t=r[u].start.line,v=p[u],w=q[t];if(v===0&&r[u].skip){v=1}if(typeof w==="undefined"||w<v){q[t]=v}})}}function k(p){Object.keys(p).forEach(function(q){b(p[q])})}function g(p){Object.keys(p).forEach(function(q){delete p[q].l})}function j(p,r){var q;if(r>0){q=1000*100*p/r+5;return Math.floor(q/10)/100}else{return 100}}function a(t,s,p){var r=t[s],u=p?t[p]:null,q={total:0,covered:0,skipped:0};Object.keys(r).forEach(function(x){var w=!!r[x],v=u&&u[x].skip;q.total+=1;if(w||v){q.covered+=1}if(!w&&v){q.skipped+=1}});q.pct=j(q.covered,q.total);return q}function c(s){var r=s.b,p=s.branchMap,q={total:0,covered:0,skipped:0};Object.keys(r).forEach(function(x){var v=r[x],y=p[x],u,t,w;for(w=0;w<v.length;w+=1){u=v[w]>0;t=y.locations&&y.locations[w]&&y.locations[w].skip;if(u||t){q.covered+=1}if(!u&&t){q.skipped+=1}}q.total+=v.length});q.pct=j(q.covered,q.total);return q}function m(){return{lines:{total:0,covered:0,skipped:0,pct:"Unknown"},statements:{total:0,covered:0,skipped:0,pct:"Unknown"},functions:{total:0,covered:0,skipped:0,pct:"Unknown"},branches:{total:0,covered:0,skipped:0,pct:"Unknown"},linesCovered:{}}}function i(q){var p=m();b(q);p.lines=a(q,"l");p.functions=a(q,"f","fnMap");p.statements=a(q,"s","statementMap");p.branches=c(q);p.linesCovered=q.l;return p}function n(s,q){var p=JSON.parse(JSON.stringify(s)),r;delete p.l;Object.keys(q.s).forEach(function(t){p.s[t]+=q.s[t]});Object.keys(q.f).forEach(function(t){p.f[t]+=q.f[t]});Object.keys(q.b).forEach(function(v){var t=p.b[v],u=q.b[v];for(r=0;r<t.length;r+=1){t[r]+=u[r]}});return p}function o(){var r=m(),q=Array.prototype.slice.call(arguments),s=["lines","statements","branches","functions"],p=function(t){if(t){s.forEach(function(u){r[u].total+=t[u].total;r[u].covered+=t[u].covered;r[u].skipped+=t[u].skipped});Object.keys(t.linesCovered).forEach(function(u){if(!r.linesCovered[u]){r.linesCovered[u]=t.linesCovered[u]}else{r.linesCovered[u]+=t.linesCovered[u]}})}};q.forEach(function(t){p(t)});s.forEach(function(t){r[t].pct=j(r[t].covered,r[t].total)});return r}function d(q){var p=[];Object.keys(q).forEach(function(r){p.push(i(q[r]))});return o.apply(null,p)}function h(q){var p={};k(q);Object.keys(q).forEach(function(t){var u=q[t],s=u.l,v=u.f,r=u.fnMap,w;w=p[t]={lines:{},calledLines:0,coveredLines:0,functions:{},calledFunctions:0,coveredFunctions:0};Object.keys(s).forEach(function(x){w.lines[x]=s[x];w.coveredLines+=1;if(s[x]>0){w.calledLines+=1}});Object.keys(v).forEach(function(x){var y=r[x].name+":"+r[x].line;w.functions[y]=v[x];w.coveredFunctions+=1;if(v[x]>0){w.calledFunctions+=1}})});return p}function f(p){var q=JSON.parse(JSON.stringify(p));[{mapKey:"statementMap",hitsKey:"s"},{mapKey:"branchMap",hitsKey:"b"},{mapKey:"fnMap",hitsKey:"f"}].forEach(function(r){Object.keys(q[r.mapKey]).forEach(function(u){var v=q[r.mapKey][u];var t=q[r.hitsKey];if(r.mapKey==="branchMap"){var s=v.locations;s.forEach(function(w,x){if(t[u][x]===0&&w.skip){t[u][x]=1}});return}if(t[u]===0&&v.skip){t[u]=1}})});return q}var e={addDerivedInfo:k,addDerivedInfoForFile:b,removeDerivedInfo:g,blankSummary:m,summarizeFileCoverage:i,summarizeCoverage:d,mergeFileCoverage:n,mergeSummaryObjects:o,toYUICoverage:h,incrementIgnoredTotals:f};if(l){module.exports=e}else{window.coverageUtils=e}}(typeof module!=="undefined"&&typeof module.exports!=="undefined"&&typeof exports!=="undefined"));