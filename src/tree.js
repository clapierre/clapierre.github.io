define(["vellum/util","underscore"],function(a,c){function b(e,f){this.value=f;this.children=e||[];this.parent=null}b.prototype={getChildren:function(){return this.children},getValue:function(){return this.value},addChild:function(e){e.parent=this;this.children.push(e)},insertChild:function(f,e){if(f===null){return null}if(e<0){e=0}f.parent=this;this.children.splice(e,0,f)},getSingleMatchingNode:function(f){var h=this.getValue(),g;if(f(h)){return this}else{for(var e=0;e<this.children.length;e++){g=this.children[e].getSingleMatchingNode(f);if(g){return g}}}return null},removeChild:function(f){var e=this.children.indexOf(f);if(e!==-1){this.children.splice(e,1)}f.parent=null;return f},getID:function(){if(this.isRootNode){return this.rootNodeId}return this.getValue().getNodeID()},getChildrenMugs:function(){var e,f=[];for(e in this.children){if(this.children.hasOwnProperty(e)){f.push(this.children[e].getValue())}}return f},getStructure:function(){var e={};e[this.getID()]=c.map(this.children,function(f){return f.getStructure()});return e},treeMap:function(h,g,f){var e=h(this),i=this.getChildren(),j;if(e){g.push(e)}for(j in i){if(i.hasOwnProperty(j)){i[j].treeMap(h,g,f)}}if(f){f(this,e)}return g},walk:function(h){function g(k){if(k){e=k(e,f)}for(var j=0;j<e.length;j++){e[j].walk(h)}}var f=this.getValue(),e=this.getChildren();h(f,this.getID(),g)},getAbsolutePath:function(h){if(this.isRootNode){if(h){return""}return"/"+this.getID()}var f=this.value,e;if(f.p.dataParent){e=f.p.dataParent}else{e=this.parent.getAbsolutePath(h);if(e===null){return null}}var g=this.getID();if(f.options.getPathName){g=f.options.getPathName(f,g)}return e+"/"+g},validateTree:function(g){var f,e;if(!this.getValue()){throw"Tree contains node with no values!"}if(!g(this.getValue())){return false}for(f in this.getChildren()){if(this.getChildren().hasOwnProperty(f)){e=this.getChildren()[f].validateTree(g);if(!e){return false}}}return true},getRootNode:function(){if(this.isRootNode){return this}return this.parent.getRootNode()}};function d(e,f){a.eventuality(this);this.rootNode=new b(null,null);this.rootNode.isRootNode=true;this.setRootID(e);this.treeType=f||"data"}d.prototype={setRootID:function(e){this.rootNode.rootNodeId=e},getParentNode:function(e){if(this.rootNode===e){return this.rootNode}return e&&e.parent},getStructure:function(){return this.rootNode.getStructure()},getNodeFromMug:function(e){return e["_node_"+this.treeType]},_removeNodeFromTree:function(f){var e=this.getParentNode(f);if(e){e.removeChild(f);this.fire({type:"change"})}},insertMug:function(h,e,l,i){var g=l?this.getNodeFromMug(l):this.rootNode,j=this.getNodeFromMug(h),k,f;if(j&&this.rootNode===j.getRootNode()){this._removeNodeFromTree(j)}else{j=new b(null,h);h["_node_"+this.treeType]=j}switch(e){case"before":case"inside":f=this.getParentNode(g);k=f.children.indexOf(g);f.insertChild(j,k);break;case null:case"after":f=this.getParentNode(g);k=f.children.indexOf(g);f.insertChild(j,k+1);break;case"into":case"last":g.addChild(j);break;case"first":g.insertChild(j,0);break;case"index":g.insertChild(j,i);break;default:throw"in insertMug() position argument MUST be null, 'before', 'after', 'into', 'first' or 'last'. Argument was: "+e}this.fire({type:"change",mug:h});return j},getAbsolutePath:function(e,g){var f=this.getNodeFromMug(e);if(!f){return null}return f.getAbsolutePath(g)},findSibling:function(l,j,e){var h=this.getNodeFromMug(l),g,k,f;if(!h){throw"mug not found in "+this.treeType+" tree"}g=this.getParentNode(h).getChildrenMugs();k=g.indexOf(l);if(k===-1){throw"mug not found in its parent's children"}if(j==="before"){for(f=k-1;f>=0;f--){if(e(g[f])){return g[f]}}}else{for(f=k+1;f<g.length;f++){if(e(g[f])){return g[f]}}}return null},removeMug:function(e){this._removeNodeFromTree(this.getNodeFromMug(e))},getRootChildren:function(){return this.rootNode.getChildrenMugs()},treeMap:function(f,e){return this.rootNode.treeMap(f,[],e)},walk:function(e){this.rootNode.walk(e)},isTreeValid:function(g){var f=this.rootNode.getChildren(),e,h;for(e in f){if(f.hasOwnProperty(e)){h=f[e].validateTree(g);if(!h){return false}}}return true},getRootNode:function(){return this.rootNode}};d.Node=b;return d});