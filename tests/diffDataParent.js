require(["chai","jquery","underscore","tests/utils","text!static/diffDataParent/parse.xml","text!static/diffDataParent/sibling-as-child.xml","text!static/diffDataParent/data-parent-mug-after.xml","text!static/diffDataParent/data-parent-mug-before.xml","text!static/diffDataParent/data-parent-mug-in-between.xml"],function(f,c,i,g,b,h,e,j,d){var a=f.assert,k=g.call;describe("Control elements with different data parents",function(){before(function(l){g.init({javaRosa:{langs:["en"]},core:{onReady:l}})});it("should not allow repeat group children to have other data parents",function(){g.loadXML("");var n=g.addQuestion("Repeat","repeat1"),m=g.addQuestion.bind({prevId:n.p.nodeID})("Text","text1"),l=g.addQuestion.bind({prevId:n.p.nodeID})("Text","text2");l.p.dataParent="/data";a(g.isTreeNodeValid(m),"text1 should be valid");a(!g.isTreeNodeValid(l),"text2 should not be valid")});it("should not allow a data parent to be an input",function(){g.loadXML("");var m=g.addQuestion("Text","text1"),l=g.addQuestion("Text","text2");l.p.dataParent="/data/text1";a(g.isTreeNodeValid(m),"text1 should be valid");a(!g.isTreeNodeValid(l),"text2 should not be valid")});it("should keep the same data parent after a move",function(){g.loadXML("");var n=g.addQuestion("Text","text1"),m=g.addQuestion("Text","text2"),l=k("getData").core.form;g.addQuestion("Group","group1");m.p.dataParent="/data/group1";l.moveMug(m,"before",n);a.equal(m.p.dataParent,"/data/group1")});it("should update data tree after a change to data parent",function(){g.loadXML("");var n=g.addQuestion("Text","text1"),l=g.addQuestion("Group","group1"),o=g.addQuestion.bind({prevId:n.p.nodeID})("Group","group2"),m=k("getData").core.form;n.p.dataParent="/data/group1";a.equal(n.p.dataParent,"/data/group1");m.moveMug(l,"into",o);a.equal(n.p.dataParent,"/data/group2/group1")});it("should clear the data parent when moving to a repeat group",function(){g.loadXML("");var n=g.addQuestion("Text","text1");g.addQuestion("Group","group1");var l=g.addQuestion.bind({prevId:n.p.nodeID})("Repeat","repeat1"),m=k("getData").core.form;n.p.dataParent="/data/group1";m.moveMug(n,"into",l);a(g.isTreeNodeValid(n),n.getErrors().join("\n"));a.isUndefined(n.p.dataParent)});it("should have proper data parent after reloading the form",function(){g.loadXML("");var m=g.addQuestion("Text","text1"),l=k("getData").core.form;g.addQuestion("Group","group1");m.p.dataParent="/data/group1";g.loadXML(k("createXML"));a.equal(m.p.dataParent,"/data/group1");g.assertTreeState(l.dataTree(),"group1","  text1")});it("should update mug path mapping on set data parent",function(){var l=g.loadXML(""),n=g.addQuestion("Text","text");g.addQuestion("Group","group");n.p.dataParent="/data/group";var m=JSON.stringify(i.object(i.map(l.mugMap,function(o,p){if(p.startsWith("/")){return[p,o.__className]}return["",undefined]})));a(g.getMug("/data/group/text"),'cannot find "/data/group/text" in '+m)});it("should parse and write XML to have the same order",function(){g.loadXML(b);g.assertXmlEqual(k("createXML"),b)});it("should have proper data parent after being loaded from xml",function(){g.loadXML(b);var l=g.getMug("/data/parent/different-child");a.equal(l.p.dataParent,"/data/parent");g.assertJSTreeState("different-child","parent","  normal-child")});it("should use the control parent when inserting after a mug with different data parent",function(){g.loadXML("");var l=k("getData").core.form,m=g.addQuestion("Text","text1");g.addQuestion("Group","group");g.addQuestion("Text","text2");m.p.dataParent="/data/group";g.addQuestion.bind({prevId:m.absolutePath})("Text","text3");g.assertTreeState(l.dataTree(),"text3","group","  text2","  text1");g.assertJSTreeState("text1","text3","group","  text2")});it("should properly load group before sibling/child",function(){g.loadXML(h);var l=g.getMug("/data/text");a.equal(l.p.dataParent,"/data");g.assertJSTreeState("group","  text");g.assertXmlEqual(k("createXML"),h)});it("should properly load mug after other mugs",function(){g.loadXML(e);var l=g.getMug("/data/parent/child");a.equal(l.p.dataParent,"/data/parent");g.assertJSTreeState("before-child","child","parent");g.assertXmlEqual(k("createXML"),e)});it("should properly load mug before other mugs",function(){g.loadXML(j);var l=g.getMug("/data/parent/child");a.equal(l.p.dataParent,"/data/parent");g.assertJSTreeState("child","after-child","parent");g.assertXmlEqual(k("createXML"),j)});it("should properly load mug in between other mugs",function(){g.loadXML(d);var l=g.getMug("/data/parent/child");a.equal(l.p.dataParent,"/data/parent");g.assertJSTreeState("before-child","child","after-child","parent");g.assertXmlEqual(k("createXML"),d)})})});