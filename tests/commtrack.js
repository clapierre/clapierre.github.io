define(["tests/utils","chai","jquery","underscore","vellum/commtrack","text!static/commtrack/balance-block.xml","text!static/commtrack/invalid-transfer.xml","text!static/commtrack/transfer-block.xml"],function(e,d,c,i,h,b,f,g){var a=d.assert,j=e.call;describe("The CommTrack module",function(){before(function(k){e.init({javaRosa:{langs:["en"]},core:{onReady:k}})});it("should load a transfer block",function(){e.loadXML(g);var k=e.getMug("transfer[@type='trans-1']");a.equal(k.p.sectionId,"stock");a.equal(k.p.quantity,"/data/amount_received");a.equal(k.p.entryId,"instance('commcaresession')/session/data/product_id");a.equal(k.p.src,"instance('commcaresession')/session/data/case_id");a.equal(k.p.dest,"instance('casedb')/casedb/case[@case_id=instance('commcaresession')/session/data/case_id]/index/parent");a.equal(k.p.date,"/data/meta/timeEnd");a.equal(k.p.relevantAttr,"true()")});it("should create a transfer block",function(){e.loadXML("");e.addQuestion("Int","amount_received");var k=e.addQuestion("Transfer","trans-1");k.p.sectionId="stock";k.p.quantity="/data/amount_received";k.p.entryId="instance('commcaresession')/session/data/product_id";k.p.src="instance('commcaresession')/session/data/case_id";k.p.dest="instance('casedb')/casedb/case[@case_id=instance('commcaresession')/session/data/case_id]/index/parent";k.p.relevantAttr="true()";k.form.addInstanceIfNotExists({id:"products",src:"jr://fixture/commtrack:products"});k.form.addInstanceIfNotExists({id:"ledger",src:"jr://instance/ledgerdb"});e.assertXmlEqual(j("createXML"),g,{normalize_xmlns:true})});it("should load a balance block",function(){e.loadXML(b);var k=e.getMug("balance[@type='bal-0']");a.equal(k.p.sectionId,"stock");a.equal(k.p.quantity,"/data/stock_amount");a.equal(k.p.entityId,"instance('commcaresession')/session/data/case_id");a.equal(k.p.entryId,"instance('commcaresession')/session/data/product_id");a.equal(k.p.relevantAttr,"/data/stock_amount != 0")});it("should create a balance block",function(){e.loadXML("");e.addQuestion("Int","stock_amount");var k=e.addQuestion("Balance","bal-0");k.p.sectionId="stock";k.p.quantity="/data/stock_amount";k.p.entityId="instance('commcaresession')/session/data/case_id";k.p.entryId="instance('commcaresession')/session/data/product_id";k.p.relevantAttr="/data/stock_amount != 0";k.form.addInstanceIfNotExists({id:"products",src:"jr://fixture/commtrack:products"});k.form.addInstanceIfNotExists({id:"ledger",src:"jr://instance/ledgerdb"});e.assertXmlEqual(j("createXML"),b,{normalize_xmlns:true})});it("should create a transfer block in a repeat with jr-insert events",function(){e.loadXML();e.addQuestion("Repeat","group");var m=e.addQuestion("Transfer","trans");m.p.sectionId="stock";m.p.quantity="1";m.p.entryId="3";m.p.src="src";m.p.dest="dst";var l=c(e.call("createXML")),q=l.find("bind[calculate=1]"),n=l.find("setvalue[value=3]"),o=l.find("setvalue[value=src]"),p=l.find("setvalue[value=dst]"),k=l.find("setvalue[value='/data/meta/timeEnd']");a.equal(q.attr("nodeset"),"/data/group/transfer[@type='trans']/entry/@quantity");a.equal(n.attr("ref"),"/data/group/transfer[@type='trans']/entry/@id");a.equal(n.attr("event"),"jr-insert");a.equal(o.attr("event"),"jr-insert");a.equal(p.attr("event"),"jr-insert");a.equal(k.attr("event"),"jr-insert")});it("should change setvalue events from xforms-ready to jr-insert on move into repeat",function(){e.loadXML(g);var n=e.addQuestion("Repeat","group"),l=e.getMug("transfer[@type='trans-1']");l.form.moveMug(l,"into",n);var k=e.call("createXML"),m=c(k);a.equal(m.find("setvalue[event=jr-insert]").length,4,k);a.equal(m.find("setvalue[event=xforms-ready]").length,0,k);a.equal(m.find("setvalue").length,4,k)});it("transfer question should not be valid when src and dest are both empty",function(){e.loadXML();var k=e.addQuestion("Transfer","t1");a.strictEqual(k.p.src,"");a.strictEqual(k.p.dest,"");k.validate();a(!e.isTreeNodeValid(k),"Transfer question with empty src and dest should be invalid");a(k.messages.get("src").length,"src should have messages");a(k.messages.get("dest").length,"dest should have messages")});it("new transfer question should not have validation errors",function(){e.loadXML();var k=e.addQuestion("Transfer","t1");a.strictEqual(k.p.src,"");a.strictEqual(k.p.dest,"");a.deepEqual(e.getMessages(k),"")});it("should show error icon in tree on load invalid transfer question",function(){e.loadXML(f);var k=e.getMug("transfer[@type='trans']");a(!e.isTreeNodeValid(k),"tree node should not be valid")});it("should create two transfer blocks with the same parent node",function(){e.loadXML();e.addQuestion("Transfer","t1").p.src="value";e.addQuestion("Transfer","t2").p.src="value";var k=e.call("createXML"),l=c(k);a.equal(l.find("transfer").length,2,k);a.equal(l.find("setvalue[ref='/data/transfer[@type=\\'t1\\']/@src']").length,1,k);a.equal(l.find("setvalue[ref='/data/transfer[@type=\\'t2\\']/@src']").length,1,k)});describe("transfer question",function(){var k;before(function(){e.loadXML();k=e.addQuestion("Transfer","t1")});it("with missing src and dest should not be valid",function(){k.p.src="";k.p.dest="";k.validate();a.notDeepEqual(k.getErrors(),[],"Transfer with missing src should not be valid")});it("with missing src should not be valid",function(){k.p.src="";k.p.dest="something";k.validate();a.notDeepEqual(k.getErrors(),[],"Transfer with missing src should not be valid")});it("with missing dest should not be valid",function(){k.p.src="something";k.p.dest="";k.validate();a.notDeepEqual(k.getErrors(),[],"Transfer with missing dest should not be valid")});it("with both src and dest should be valid",function(){k.p.src="something";k.p.dest="something";k.validate();a.deepEqual(k.getErrors(),[])})});it("dispense question should omit dest",function(){e.loadXML();var k=e.addQuestion("Dispense","t1");k.p.src="something";var l=e.call("createXML"),m=c(l);a.strictEqual(m.find("transfer[type='t1']").attr("src"),"","unexpected transfer src attribute\n"+l);a.isUndefined(m.find("transfer[type='t1']").attr("dest"),"unexpected transfer dest attribute\n"+l);a.equal(m.find("setvalue[ref='/data/transfer[@type=\\'t1\\']/@src']").length,1,"unexpected @src setvalue:\n"+l);a.equal(m.find("setvalue[ref='/data/transfer[@type=\\'t1\\']/@dest']").length,0,"unexpected @dest setvalue:\n"+l)});it("receive question should omit src",function(){e.loadXML();var k=e.addQuestion("Receive","t1");k.p.dest="something";var l=e.call("createXML"),m=c(l);a.isUndefined(m.find("transfer[type='t1']").attr("src"),"unexpected transfer src attribute\n"+l);a.strictEqual(m.find("transfer[type='t1']").attr("dest"),"","unexpected transfer dest attribute\n"+l);a.equal(m.find("setvalue[ref='/data/transfer[@type=\\'t1\\']/@src']").length,0,"unexpected @src setvalue:\n"+l);a.equal(m.find("setvalue[ref='/data/transfer[@type=\\'t1\\']/@dest']").length,1,"unexpected @dest setvalue:\n"+l)});it("transfer block with src and dest should load as Transfer question",function(){e.loadXML(g);var k=e.getMug("transfer[@type='trans-1']");a.equal(k.__className,"Transfer")});it("transfer block with dest only should load as Receive question",function(){e.loadXML(g.replace(' src=""',"").replace(/<setvalue [^>]*@src[^>]*\/>/,""));var k=e.getMug("transfer[@type='trans-1']");a.equal(k.__className,"Receive")});it("transfer block with src only should load as Dispense question",function(){e.loadXML(g.replace(' dest=""',"").replace(/<setvalue [^>]*@dest[^>]*\/>/,""));var k=e.getMug("transfer[@type='trans-1']");a.equal(k.__className,"Dispense")});it("should enable save button when a transfer's source or destination changes",function(){e.loadXML(g);e.saveButtonEnabled(false);e.clickQuestion("transfer[@type='trans-1']");c("input[name='property-dest']").change();a(e.saveButtonEnabled(),"save button is disabled")});i.each(["Balance","Transfer","Dispense","Receive"],function(k){it("should add ledger instance on add "+k+" question",function(){e.loadXML("");e.addQuestion(k,"question");var l=e.call("createXML"),m=c(l);a.equal(m.find("instance[src='jr://instance/ledgerdb']").length,1,"wrong ledger instance count\n"+l)});it("should remove ledger instance on delete "+k+" question",function(){e.loadXML("");var l=e.addQuestion(k,"question");e.deleteQuestion(l.absolutePath);var m=e.call("createXML"),n=c(m);a.equal(n.find("instance[src='jr://instance/ledgerdb']").length,0,"ledger instance should be removed\n"+m)});it("should remove ledger instance on delete "+k+" loaded from XML",function(){var n=k==="Transfer";e.loadXML(n?g:b);var l=e.getMug(n?"transfer[@type='trans-1']":"balance[@type='bal-0']");e.deleteQuestion(l.absolutePath);var m=e.call("createXML"),o=c(m);a.equal(o.find("instance[src='jr://instance/ledgerdb']").length,0,"ledger instance should be removed\n"+m)});it("should drop setvalue nodes on delete "+k+" question",function(){var n=k==="Transfer";e.loadXML(n?g:b);var l=e.getMug(n?"transfer[@type='trans-1']":"balance[@type='bal-0']");e.deleteQuestion(l.absolutePath);var m=e.call("createXML"),o=c(m);a.equal(o.find("setvalue").length,0,"setvalue nodes should be removed\n"+m)})});it("should not remove ledger instance on delete second Transfer question",function(){e.loadXML("");e.addQuestion("Transfer","trans");var k=e.addQuestion("Transfer","question");e.deleteQuestion(k.absolutePath);var l=e.call("createXML"),m=c(l);a.equal(m.find("instance[src='jr://instance/ledgerdb']").length,1,"ledger instance should be removed\n"+l)});it("should show 'Case' property for Balance",function(){e.loadXML("");e.addQuestion("Balance","bal");a.equal(c("[name=property-entityId]").length,1)});describe("should properly encode",function(){var k={Transfer:g,Dispense:g.replace(' dest=""',"").replace(/<setvalue [^>]*@dest[^>]*\/>/,""),Receive:g.replace(' src=""',"").replace(/<setvalue [^>]*@src[^>]*\/>/,""),};i.each([{from:"Transfer",to:"Dispense"},{from:"Transfer",to:"Receive"},{from:"Dispense",to:"Transfer"},{from:"Dispense",to:"Receive"},{from:"Receive",to:"Transfer"},{from:"Receive",to:"Dispense"},],function(l){it(l.from+" changed to "+l.to,function(){e.loadXML(k[l.from]);var m=e.getMug("transfer[@type='trans-1']"),p=l.to==="Transfer"||l.to==="Dispense",q=l.to==="Transfer"||l.to==="Receive";a.equal(m.__className,l.from);j("changeMugType",m,l.to);if(p){m.p.src="instance('commcaresession')/session/data/case_id"}if(q){m.p.dest="instance('casedb')/casedb/case[@case_id=instance('commcaresession')/session/data/case_id]/index/parent"}var n=e.call("createXML"),o=c(n);a.strictEqual(o.find("transfer[type='trans-1']").attr("src"),p?"":undefined,"unexpected transfer src attribute\n"+n);a.strictEqual(o.find("transfer[type='trans-1']").attr("dest"),q?"":undefined,"unexpected transfer dest attribute\n"+n);a.equal(o.find("setvalue[ref='/data/transfer[@type=\\'trans-1\\']/@src']").length,p?1:0,"unexpected @src setvalue:\n"+n);a.equal(o.find("setvalue[ref='/data/transfer[@type=\\'trans-1\\']/@dest']").length,q?1:0,"unexpected @dest setvalue:\n"+n);e.loadXML(n);m=e.getMug("transfer[@type='trans-1']");a.equal(m.__className,l.to)})})})})});