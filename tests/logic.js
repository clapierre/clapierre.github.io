require(["chai","jquery","underscore","tests/utils","vellum/logic"],function(d,c,g,e,b){var a=d.assert,h=e.call;function i(j){return j.toXPath()}describe("The logic manager",function(){before(function(j){e.init({core:{onReady:function(){j()}}})});it("should update expressions when a question ID changes",function(){e.loadXML(f);e.getMug("question1").p.nodeID="question";var j=e.getMug("/data/question2");a.equal("/data/question = 1",j.p.relevantAttr)});it("should not update expressions for model iteration",function(){e.loadXML("");var j=e.addQuestion("Repeat","product");j.p.dataSource={instance:{id:"products",src:"jr://fixture/commtrack:products"},idsQuery:"instance('products')/products/product/@id"};h("createXML");a(e.isTreeNodeValid(j),"repeat should be valid")});describe("should add validation error for",function(){var m=["relevantAttr","calculateAttr","constraintAttr","dataParent","repeat_count","filter","defaultValue"],k=["constraintAttr"],n=g.difference(m,k),l={repeat_count:"repeat",filter:"select/itemset",};before(function(){e.loadXML("");e.addQuestion("Text","text");e.addQuestion("SelectDynamic","select");e.addQuestion("Repeat","repeat")});it("the same set of xpath references as logic module",function(){a.deepEqual(b.XPATH_REFERENCES,m);a.deepEqual(b.NO_SELF_REFERENCES,n)});function j(o,q,r){var p=e.getMug(l[o]||"text");a(e.isTreeNodeValid(p),e.getMessages(p));a.deepEqual(p.messages.get(o),[]);p.p[o]=q;if(r){a(!e.isTreeNodeValid(p),"mug should not be valid");a(p.messages.get(o).length,o+" should have messages")}else{a(e.isTreeNodeValid(p),"mug should be valid");a(p.messages.get(o).length===0,o+" should not have messages")}p.p[o]="";a(e.isTreeNodeValid(p),e.getMessages(p));a.deepEqual(p.messages.get(o),[])}g.each(m,function(o){it("invalid path in "+o,function(){j(o,"/data/unknown",true)})});g.each(n,function(o){it("self referencing path in "+o,function(){j(o,".",true)})});g.each(k,function(o){it("self referencing path in "+o,function(){j(o,".",false)})})})});describe("Logic expression",function(){var j=[["instance('casedb')/cases/case/property",["instance('casedb')/cases/case/property"],["instance('casedb')/cases/case/property"],],["instance('casedb')/cases/case/property[@case_id = /data/caseid]",["instance('casedb')/cases/case/property[@case_id = /data/caseid]","@case_id","/data/caseid"],["instance('casedb')/cases/case/property[@case_id = /data/caseid]"],],["instance('casedb')/cases/case/property[@case_id = /data/caseid] = /data/other_caseid",["instance('casedb')/cases/case/property[@case_id = /data/caseid]","@case_id","/data/caseid","/data/other_caseid"],["instance('casedb')/cases/case/property[@case_id = /data/caseid]","/data/other_caseid"],],["instance('casedb')/cases/case[@case_id = instance('casedb')/cases/case[@case_id = instance('commcaresession')/session/data/case_id]/index/parent]/edd = /data/other_caseid",["instance('casedb')/cases/case[@case_id = instance('casedb')/cases/case[@case_id = instance('commcaresession')/session/data/case_id]/index/parent]/edd","@case_id","instance('casedb')/cases/case[@case_id = instance('commcaresession')/session/data/case_id]/index/parent","instance('commcaresession')/session/data/case_id","/data/other_caseid"],["instance('casedb')/cases/case[@case_id = instance('casedb')/cases/case[@case_id = instance('commcaresession')/session/data/case_id]/index/parent]/edd","/data/other_caseid"],],["selected(instance('casedb')/cases/case/property[@case_id = /data/caseid])",["instance('casedb')/cases/case/property[@case_id = /data/caseid]","@case_id","/data/caseid"],["instance('casedb')/cases/case/property[@case_id = /data/caseid]"],],["(instance('casedb')/cases/case/property[@case_id = /data/caseid] = /data/other_caseid) and (/other/thing = /this/thing)",["instance('casedb')/cases/case/property[@case_id = /data/caseid]","@case_id","/data/caseid","/data/other_caseid","/other/thing","/this/thing"],["instance('casedb')/cases/case/property[@case_id = /data/caseid]","/data/other_caseid","/other/thing","/this/thing"],],["/data/text1 = /data/text2",["/data/text1","/data/text2"],["/data/text1","/data/text2"],],];g.each(j,function(l){var k=new b.LogicExpression(l[0]);it("should return all paths: "+l[0],function(){var m=g.map(k.getPaths(),i);a.deepEqual(g.difference(m,l[1]),[]);a.deepEqual(g.difference(l[1],m),[])});it("should return top level paths: "+l[0],function(){var m=g.map(k.getTopLevelPaths(),i);a.deepEqual(g.difference(m,l[2]),[]);a.deepEqual(g.difference(l[2],m),[])})})});var f='<?xml version="1.0" encoding="UTF-8" ?>    <h:html xmlns:h="http://www.w3.org/1999/xhtml"            xmlns:orx="http://openrosa.org/jr/xforms"            xmlns="http://www.w3.org/2002/xforms"            xmlns:xsd="http://www.w3.org/2001/XMLSchema"            xmlns:jr="http://openrosa.org/javarosa"            xmlns:vellum="http://commcarehq.org/xforms/vellum">        <h:head>            <h:title>Untitled Form</h:title>            <model>                <instance>                    <data xmlns:jrm="http://dev.commcarehq.org/jr/xforms"                          xmlns="http://openrosa.org/formdesigner/BDBF500D-13AD-40F0-90B5-EE65A56F92E5"                          uiVersion="1"                          version="1"                          name="Untitled Form">                        <question1 />                        <question2 />                    </data>                </instance>                <bind nodeset="/data/question1" type="xsd:string" />                <bind nodeset="/data/question2" type="xsd:string" relevant="/data/question1 = 1" />                <itext>                    <translation lang="en" default="">                        <text id="question1-label">                            <value>question1</value>                        </text>                        <text id="question2-label">                            <value>question2</value>                        </text>                    </translation>                    <translation lang="hin">                        <text id="question1-label">                            <value>question1</value>                        </text>                        <text id="question2-label">                            <value>question2</value>                        </text>                    </translation>                </itext>            </model>        </h:head>        <h:body>            <input ref="/data/question1">                <label ref="jr:itext(\'question1-label\')" />            </input>            <input ref="/data/question2">                <label ref="jr:itext(\'question2-label\')" />            </input>        </h:body>    </h:html>'});