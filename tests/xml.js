require(["jquery","underscore","chai","vellum/xml"],function(e,d,b,c){var a=b.assert;describe("The XML normalizer",function(){function f(h,j,g){var i=c.normalize(h);a.strictEqual(i,j);if(d.isUndefined(g)||g){a.strictEqual(c.humanize(i),h)}}it("should preserve empty string",function(){f("","")});it("should preserve space",function(){f(" "," ")});it("should preserve newline",function(){f(" "," ")});it("should preserve empty XML node",function(){f("<output />","<output />")});it("should escape & character",function(){f("Mother & Child Reunion","Mother &amp; Child Reunion")});it("should escape attribute value with < character",function(){f('<output value="2 < 3" />','<output value="2 &lt; 3" />')});it("should escape attribute value with > character",function(){f('<output value="2 > 3" />','<output value="2 &gt; 3" />')});it("should escape attribute value with <= character",function(){f('<output value="2 <= 3" />','<output value="2 &lt;= 3" />')});it("should escape attribute value with >= character",function(){f('<output value="2 >= 3" />','<output value="2 &gt;= 3" />')});it("should escape attribute value with < tight",function(){f('<output value="2<3" />','<output value="2&lt;3" />',false)});it("should escape attribute value with > tight",function(){f('<output value="2>3" />','<output value="2&gt;3" />',false)});it("should escape < character",function(){f("your visit count must be < 5","your visit count must be &lt; 5")});it("should escape > character",function(){f("your visit count must be > 5","your visit count must be &gt; 5")});it("should escape attribute value with > and trailing text (v1)",function(){f('<output value="2 > 3" /> text','<output value="2 &gt; 3" /> text')});it("should escape attribute value with > and trailing text (v2)",function(){f("<output value='2 > 3' /> text",'<output value="2 &gt; 3" /> text',false)});it("should escape attribute value with > and trailing text (v3)",function(){f('<output value="2 > 3"/>text','<output value="2 &gt; 3" />text',false)});it("should escape attribute value with > and trailing text (v4)",function(){f('<output value="2 > 3"></output> text','<output value="2 &gt; 3" /> text',false)});it("should escape attribute value with > and trailing text (v5)",function(){f('<out:p_3-6. h:v-1._="2 > 3" />text','<out:p_3-6. h:v-1._="2 &gt; 3" />text')});it("should escape attribute value with < and trailing text",function(){f('<output value="2 < 3" /> text','<output value="2 &lt; 3" /> text')});it("should escape < character before tag",function(){f('your visit count must be < <output value="/path" />','your visit count must be &lt; <output value="/path" />')});it("should escape > character before tag",function(){f('your visit count must be > <output value="/path" />','your visit count must be &gt; <output value="/path" />')});it("should preserve attribute value with path",function(){f('<output value="/path" />','<output value="/path" />')});it("should preserve output node with text before",function(){f('text <output value="/path" />','text <output value="/path" />')});it("should preserve output node with text after",function(){f('<output value="/path" /> text','<output value="/path" /> text')});it("should preserve attribute without value",function(){f("<output attr />",'<output attr="" />',false)});it("should preserve attribute value with path, unterminated tag",function(){f('<output value="/path">','<output value="/path" />',false)});it("should preserve newline",function(){f("line 1\nline2","line 1\nline2")});it("should preserve newline in attribute value",function(){f('<output value="selected(/path,\n2)" />','<output value="selected(/path,\n2)" />')});it("should preserve attribute with unquoted value",function(){f("<output attr=value />",'<output attr="value" />',false)});it("should accept jquery node",function(){f(e("<value><output /></value>"),"<output />",false)});it("should handle malformed tag",function(){f('<output value="/path"',"",false)});it("should replace &nbsp; with space",function(){f("a &nbsp; b","a   b",false)})});describe("The XML humanizer",function(){function f(i,g,h){var j=c.humanize(i);a.strictEqual(j,g);if(h){a.strictEqual(c.normalize(j),i)}}it("should convert free < character",function(){f("2 &lt; 3","2 < 3",true)});it("should convert free > character",function(){f("2 &gt; 3","2 > 3",true)});it("should convert free & character",function(){f("2 &amp; 3","2 & 3",true)});it("should not convert escaped tag",function(){f(" &lt;div&gt; "," &lt;div&gt; ",true)});it("should convert output tag",function(){f('<output value="1 &amp; 2 &lt; 3" />','<output value="1 & 2 < 3" />',true)});it("should convert child nodes",function(){var g="<value>1 &amp; 2 &lt; 3 <output value='/path' /></value>";f(e(g),'1 & 2 < 3 <output value="/path" />')});it("should convert child output node",function(){var g="<value><output value='1 &amp; 2 &lt; 3' /></value>";f(e(g),'<output value="1 & 2 < 3" />')});it("should convert empty child nodes",function(){f(e("<value />"),"")});it("should space child node",function(){f(e("<value> </value>")," ")});it("should newline child node",function(){f(e("<value>\n</value>"),"\n")})})});